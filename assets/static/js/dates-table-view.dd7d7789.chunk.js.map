{"version":3,"sources":["../domains/eventEditor/src/ui/datetimes/DateRegistrationsLink.tsx","../domains/eventEditor/src/ui/datetimes/datesList/cardView/DateCapacity.tsx","../domains/eventEditor/src/ui/datetimes/hooks/useDatesActionMenuItems.ts","../domains/eventEditor/src/ui/datetimes/datesList/actionsMenu/DateActionsMenu.tsx","../domains/eventEditor/src/ui/datetimes/datesList/editable/EditableName.tsx","../domains/eventEditor/src/ui/datetimes/datesList/tableView/Checkbox.tsx","../domains/eventEditor/src/ui/datetimes/datesList/tableView/useHeaderRowGenerator.tsx","../domains/eventEditor/src/ui/datetimes/datesList/tableView/useBodyRowGenerator.tsx","../domains/eventEditor/src/ui/datetimes/datesList/bulkEdit/details/formValidation.ts","../domains/eventEditor/src/ui/datetimes/datesList/bulkEdit/details/useBulkEditFormConfig.ts","../domains/eventEditor/src/ui/datetimes/datesList/bulkEdit/details/useSubmitForm.ts","../domains/eventEditor/src/ui/datetimes/datesList/bulkEdit/details/EditDetails.tsx","../domains/eventEditor/src/ui/datetimes/datesList/bulkEdit/delete/useOnDelete.ts","../domains/eventEditor/src/ui/datetimes/datesList/bulkEdit/delete/Delete.tsx","../domains/eventEditor/src/ui/datetimes/datesList/bulkEdit/actions/Actions.tsx","../domains/eventEditor/src/ui/datetimes/datesList/tableView/TableView.tsx","../node_modules/ramda/src/reduce.js","../node_modules/ramda/src/pipe.js","../node_modules/ramda/src/internal/_checkForMethod.js","../node_modules/ramda/src/internal/_pipe.js","../node_modules/ramda/src/tail.js","../node_modules/ramda/src/slice.js"],"names":["tooltipProps","placement","DateRegistrationsLink","datetime","regListUrl","useRegistrationsLink","datetime_id","dbId","tooltip","__","href","DateCapacity","entity","updateEntity","useDatetimeMutator","id","updateRelatedTickets","useUpdateRelatedTickets","ticketQuantityForCapacity","useTicketQuantityForCapacity","onChange","useCallback","cap","capacity","parseInfinity","inputGenerator","value","useDatesActionMenuItems","useEntityActionsMenuItems","DateActionsMenu","props","menuItems","EditableName","className","view","dateName","name","lineCount","onChangeName","tag","withFeature","useShowDatetimeBA","showBulkActions","useVisibleDatetimeIds","visibleDatetimeIds","visibleEntityIds","useHeaderRowGenerator","filterState","displayStartOrEndDate","cells","key","type","filter","filterCellByStartOrEndDate","primary","addZebraStripes","addZebraStripesOnMobile","useBodyRowGenerator","getDatetime","useLazyDatetime","entityId","sortingEnabled","bgClassName","getDatetimeBackgroundColorClassName","shortenGuid","statusClassName","datetimeStatus","cellsData","format","Date","startDate","ENTITY_LIST_DATE_TIME_FORMAT","endDate","sold","filterCells","pipe","validate","values","a","yupToFinalFormErrors","validationSchema","yup","min","unitOptions","intervalsToOptions","pick","DATE_INTERVALS","useBulkEditFormConfig","config","onSubmit","onSubmitFrom","form","restParams","adjacentFormItemProps","useMemoStringify","useMemo","layout","debugFields","sections","icon","ProfileOutlined","title","fields","label","fieldType","CalendarOutlined","formControlProps","subFields","options","ControlOutlined","parseAsInfinity","useSubmitForm","onClose","useBulkEdit","getSelected","unSelectAll","allDates","useDatetimes","updateEntities","useBulkEditDatetimes","formData","input","formToBulkUpdateInput","EditDetails","isOpen","formConfig","warning","useOnDelete","areTrashedDates","bulkDelete","useBulkDeleteDatetimes","Delete","onDelete","useConfirmationDialog","message","onConfirm","onCancel","confirmationDialog","onOpen","useEffect","actions","useState","action","setAction","bulkEdit","useDisclosure","useDatesListFilterState","status","DatetimeStatus","trashedOnly","hooks","applyFilters","onApply","newAction","includes","doAction","show","Checkbox","defaultAction","withBulkEdit","filteredDateIds","useFilteredDateIds","sortDates","useReorderDatetimes","sortResponder","bodyRowGenerator","headerRowGenerator","domain","entityIds","listId","datesList","onSort","tableCaption","tableId","reduce","require","_curry3","module","exports","_arity","_pipe","tail","arguments","length","Error","_isArray","methodname","fn","obj","apply","this","Array","prototype","slice","call","f","g","_checkForMethod","_curry1","Infinity","fromIndex","toIndex","list"],"mappings":"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","file":"static/js/dates-table-view.dd7d7789.chunk.js","sourcesContent":["import { __ } from '@eventespresso/i18n';\nimport { RegistrationsLink } from '@eventespresso/ui-components';\nimport { useRegistrationsLink } from '@eventespresso/edtr-services';\nimport type { Datetime } from '@eventespresso/edtr-services';\n\ninterface Props {\n\tdatetime: Datetime;\n}\n\nconst tooltipProps = { placement: 'top' as const };\n\nconst DateRegistrationsLink: React.FC<Props> = ({ datetime }) => {\n\tconst regListUrl = useRegistrationsLink({ datetime_id: datetime.dbId });\n\n\tconst tooltip = __('view ALL registrations for this date.');\n\n\treturn <RegistrationsLink href={regListUrl} tooltip={tooltip} tooltipProps={tooltipProps} />;\n};\n\nexport default DateRegistrationsLink;\n","import { useCallback } from 'react';\n\nimport { __ } from '@eventespresso/i18n';\n\nimport { parseInfinity } from '@eventespresso/utils';\nimport { InlineEditInfinity, TextProps } from '@eventespresso/ui-components';\nimport {\n\tuseDatetimeMutator,\n\tuseUpdateRelatedTickets,\n\tuseTicketQuantityForCapacity,\n} from '@eventespresso/edtr-services';\nimport type { DateItemProps } from '../types';\n\nconst DateCapacity: React.FC<DateItemProps> = ({ entity: datetime }) => {\n\tconst { updateEntity } = useDatetimeMutator(datetime.id);\n\n\tconst updateRelatedTickets = useUpdateRelatedTickets(datetime.id);\n\tconst ticketQuantityForCapacity = useTicketQuantityForCapacity();\n\n\tconst onChange: TextProps['onChange'] = useCallback(\n\t\t(cap) => {\n\t\t\tconst capacity = parseInfinity(cap);\n\t\t\tif (capacity !== datetime.capacity) {\n\t\t\t\tupdateEntity({ capacity });\n\n\t\t\t\tconst inputGenerator = ticketQuantityForCapacity(capacity);\n\t\t\t\tupdateRelatedTickets(inputGenerator);\n\t\t\t}\n\t\t},\n\t\t[datetime.capacity, updateEntity, ticketQuantityForCapacity, updateRelatedTickets]\n\t);\n\n\treturn (\n\t\t<InlineEditInfinity\n\t\t\tonChange={onChange}\n\t\t\ttooltip={__('edit capacity (registration limit)…')}\n\t\t\tvalue={`${datetime.capacity}`}\n\t\t/>\n\t);\n};\n\nexport default DateCapacity;\n","import type { Datetime } from '@eventespresso/edtr-services';\nimport { useEntityActionsMenuItems } from '../../../hooks/entityActionsMenu';\n\nconst useDatesActionMenuItems = (datetime: Datetime): Array<React.ReactNode> => {\n\treturn useEntityActionsMenuItems('datetime', datetime);\n};\n\nexport default useDatesActionMenuItems;\n","import { EntityActionsMenu } from '@eventespresso/ui-components';\nimport { Datetime } from '@eventespresso/edtr-services';\nimport type { ActionsMenuComponentProps } from '@eventespresso/registry';\n\nimport useDatesActionMenuItems from '../../hooks/useDatesActionMenuItems';\n\nconst DateActionsMenu: React.FC<ActionsMenuComponentProps<Datetime>> = ({ entity, ...props }) => {\n\tconst menuItems = useDatesActionMenuItems(entity);\n\n\treturn <EntityActionsMenu {...props} menuItems={menuItems} />;\n};\n\nexport default DateActionsMenu;\n","import { useCallback } from 'react';\n\nimport { __ } from '@eventespresso/i18n';\nimport { useDatetimeMutator } from '@eventespresso/edtr-services';\nimport { InlineEditText } from '@eventespresso/ui-components';\n\nimport type { DateItemProps } from '../types';\n\ninterface EditableNameProps extends DateItemProps {\n\tclassName?: string;\n\tview?: 'card' | 'table';\n}\n\nconst EditableName: React.FC<EditableNameProps> = ({ className, entity: datetime, view = 'card' }) => {\n\tconst { updateEntity } = useDatetimeMutator(datetime.id);\n\n\tconst tooltip = __('edit title…');\n\n\tconst dateName = datetime.name || tooltip;\n\n\tconst lineCount = view === 'card' && 2;\n\n\tconst onChangeName = useCallback(\n\t\t(name: string): void => {\n\t\t\tif (name !== datetime.name) {\n\t\t\t\tupdateEntity({ name });\n\t\t\t}\n\t\t},\n\t\t[datetime.name, updateEntity]\n\t);\n\n\treturn (\n\t\t<InlineEditText\n\t\t\tclassName={className}\n\t\t\tlineCount={lineCount}\n\t\t\tonChange={onChangeName}\n\t\t\ttag={view === 'table' ? 'div' : 'h4'}\n\t\t\ttooltip={tooltip}\n\t\t\tvalue={dateName}\n\t\t/>\n\t);\n};\n\nexport default EditableName;\n","import { ActionCheckbox } from '@eventespresso/ee-components';\nimport { useShowDatetimeBA, useVisibleDatetimeIds } from '@eventespresso/edtr-services';\nimport { withFeature } from '@eventespresso/services';\nimport type { ActionCheckboxProps } from '@eventespresso/ee-components';\n\nconst Checkbox: React.FC<ActionCheckboxProps> = (props) => {\n\tconst [showBulkActions] = useShowDatetimeBA();\n\tconst [visibleDatetimeIds] = useVisibleDatetimeIds();\n\n\treturn showBulkActions ? <ActionCheckbox {...props} visibleEntityIds={visibleDatetimeIds} /> : null;\n};\n\nexport default withFeature('use_bulk_edit')(Checkbox);\n","import { useCallback } from 'react';\nimport { __ } from '@eventespresso/i18n';\n\nimport { Cell } from '@eventespresso/ui-components';\nimport { filterCellByStartOrEndDate } from '@eventespresso/edtr-services';\nimport Checkbox from './Checkbox';\n\nimport type { HeaderRowGeneratorFn } from '@eventespresso/ee-components';\nimport type { DatetimesFilterStateManager } from '@eventespresso/edtr-services';\n\ntype DatesTableHeaderRowGen = HeaderRowGeneratorFn<DatetimesFilterStateManager>;\n\nconst useHeaderRowGenerator = (): DatesTableHeaderRowGen => {\n\treturn useCallback<DatesTableHeaderRowGen>((filterState) => {\n\t\tconst displayStartOrEndDate = filterState?.displayStartOrEndDate;\n\n\t\tconst cellsData: Array<Cell> = [\n\t\t\t{\n\t\t\t\tkey: 'stripe',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-entity-list-status-stripe ee-rspnsv-table-column-nano',\n\t\t\t\tvalue: '',\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'checkbox',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-date-list-col-checkbox ee-rspnsv-table-column-micro',\n\t\t\t\tvalue: (\n\t\t\t\t\t<div className={'ee-rspnsv-table-hide-on-mobile'}>\n\t\t\t\t\t\t<Checkbox />\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'id',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-date-list-col-id ee-number-column ee-rspnsv-table-column-nano',\n\t\t\t\tvalue: __('ID'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'name',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-date-list-col-name ee-rspnsv-table-column-huge',\n\t\t\t\tvalue: __('Name'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'start',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-rspnsv-table-column-default',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('Start Date')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('Start')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'end',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-rspnsv-table-column-default',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('End Date')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('End')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'capacity',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-date-list-col-hdr ee-date-list-col-capacity ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('Capacity')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('Cap')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'sold',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-date-list-col-sold ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\tvalue: __('Sold'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'registrations',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-date-list-col-hdr ee-date-list-col-registrations ee-rspnsv-table-column-smaller ee-centered-column',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('Reg list')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('Regs')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'actions',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-actions-column ee-rspnsv-table-column-big ee-centered-column',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('Actions')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('Actions')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t];\n\n\t\tconst cells = cellsData.filter(filterCellByStartOrEndDate(displayStartOrEndDate));\n\n\t\treturn {\n\t\t\tcells,\n\t\t\tclassName: 'ee-editor-date-list-items-header-row',\n\t\t\tkey: 'dates-list-header',\n\t\t\tprimary: true,\n\t\t\ttype: 'row',\n\t\t};\n\t}, []);\n};\n\nexport default useHeaderRowGenerator;\n","import { useCallback } from 'react';\nimport { format } from 'date-fns';\nimport { filter, pipe } from 'ramda';\n\nimport { addZebraStripesOnMobile } from '@eventespresso/ui-components';\nimport { filterCellByStartOrEndDate, useLazyDatetime } from '@eventespresso/edtr-services';\nimport { ENTITY_LIST_DATE_TIME_FORMAT } from '@eventespresso/constants';\nimport { getDatetimeBackgroundColorClassName, datetimeStatus } from '@eventespresso/helpers';\nimport { shortenGuid } from '@eventespresso/utils';\nimport type { DatetimesFilterStateManager } from '@eventespresso/edtr-services';\nimport type { BodyRowGeneratorFn } from '@eventespresso/ee-components';\n\nimport DateRegistrationsLink from '../../DateRegistrationsLink';\nimport DateActionsMenu from '../../datesList/actionsMenu/DateActionsMenu';\nimport DateCapacity from '../cardView/DateCapacity';\nimport { EditableName } from '../editable';\nimport Checkbox from './Checkbox';\n\ntype DatesTableBodyRowGen = BodyRowGeneratorFn<DatetimesFilterStateManager>;\n\nconst exclude = ['row', 'stripe', 'name', 'actions'];\nconst addZebraStripes = addZebraStripesOnMobile(exclude);\n\nconst useBodyRowGenerator = (): DatesTableBodyRowGen => {\n\tconst getDatetime = useLazyDatetime();\n\n\treturn useCallback<DatesTableBodyRowGen>(\n\t\t({ entityId, filterState }) => {\n\t\t\tconst datetime = getDatetime(entityId);\n\n\t\t\tconst { displayStartOrEndDate, sortingEnabled } = filterState;\n\t\t\tconst bgClassName = getDatetimeBackgroundColorClassName(datetime);\n\t\t\tconst id = datetime.dbId || shortenGuid(datetime.id);\n\t\t\tconst statusClassName = datetimeStatus(datetime);\n\n\t\t\tconst capacity = {\n\t\t\t\tkey: 'capacity',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-date-list-cell ee-date-list-col-capacity ee-rspnsv-table-column-tiny ee-number-column ee-col-5',\n\t\t\t\tvalue: sortingEnabled ? datetime.capacity : <DateCapacity entity={datetime} />,\n\t\t\t};\n\n\t\t\tconst name = {\n\t\t\t\tkey: 'name',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-date-list-cell ee-date-list-col-name ee-col-name ee-rspnsv-table-column-huge ee-rspnsv-table-hide-on-mobile',\n\t\t\t\tvalue: sortingEnabled ? (\n\t\t\t\t\tdatetime.name\n\t\t\t\t) : (\n\t\t\t\t\t<EditableName\n\t\t\t\t\t\tclassName={'ee-entity-list-text ee-focus-priority-5'}\n\t\t\t\t\t\tentity={datetime}\n\t\t\t\t\t\tview={'table'}\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t};\n\n\t\t\tconst cellsData = [\n\t\t\t\t{\n\t\t\t\t\tkey: 'stripe',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: `ee-date-list-cell ee-entity-list-status-stripe ${bgClassName} ee-rspnsv-table-column-nano`,\n\t\t\t\t\tvalue: <div className={'ee-rspnsv-table-show-on-mobile'}>{datetime.name}</div>,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'checkbox',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: 'ee-date-list-cell ee-date-list-col-checkbox ee-rspnsv-table-column-micro',\n\t\t\t\t\tvalue: <Checkbox dbId={datetime.dbId} id={datetime.id} />,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'id',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: 'ee-date-list-cell ee-date-list-col-id ee-rspnsv-table-column-nano ee-number-column',\n\t\t\t\t\tvalue: id,\n\t\t\t\t},\n\t\t\t\tname,\n\t\t\t\t{\n\t\t\t\t\tkey: 'start',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: 'ee-date-list-cell ee-rspnsv-table-column-default',\n\t\t\t\t\tvalue: format(new Date(datetime.startDate), ENTITY_LIST_DATE_TIME_FORMAT),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'end',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: 'ee-date-list-cell ee-rspnsv-table-column-default',\n\t\t\t\t\tvalue: format(new Date(datetime.endDate), ENTITY_LIST_DATE_TIME_FORMAT),\n\t\t\t\t},\n\t\t\t\tcapacity,\n\t\t\t\t{\n\t\t\t\t\tkey: 'sold',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: 'ee-date-list-cell ee-date-list-col-sold ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\t\tvalue: datetime.sold || 0,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'registrations',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName:\n\t\t\t\t\t\t'ee-date-list-cell ee-date-list-col-registrations ee-rspnsv-table-column-smaller ee-centered-column',\n\t\t\t\t\tvalue: sortingEnabled ? '-' : <DateRegistrationsLink datetime={datetime} />,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'actions',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName:\n\t\t\t\t\t\t'ee-date-list-cell ee-date-list-col-actions ee-actions-column ee-rspnsv-table-column-big',\n\t\t\t\t\tvalue: sortingEnabled ? '-' : <DateActionsMenu entity={datetime} />,\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tconst filterCells = filter(filterCellByStartOrEndDate(displayStartOrEndDate));\n\n\t\t\tconst cells = pipe(filterCells, addZebraStripes)(cellsData);\n\n\t\t\treturn {\n\t\t\t\tcells,\n\t\t\t\tclassName: `ee-editor-date-list-view-row ${statusClassName}`,\n\t\t\t\tid: `ee-editor-date-list-view-row-${datetime.id}`,\n\t\t\t\tkey: `row-${datetime.id}`,\n\t\t\t\ttype: 'row',\n\t\t\t};\n\t\t},\n\t\t[getDatetime]\n\t);\n};\n\nexport default useBodyRowGenerator;\n","import { __ } from '@eventespresso/i18n';\nimport * as yup from 'yup';\n\nimport { yupToFinalFormErrors } from '@eventespresso/form';\nimport { BulkEditFormShape } from './types';\n\nexport const validate = async (values: BulkEditFormShape): Promise<any> => {\n\treturn await yupToFinalFormErrors(validationSchema, values);\n};\n\nconst validationSchema = yup.object({\n\tname: yup.string().min(3, () => __('Name must be at least three characters')),\n});\n","import { useMemo, useCallback } from 'react';\nimport { __ } from '@eventespresso/i18n';\nimport { pick } from 'ramda';\n\nimport { CalendarOutlined, ControlOutlined, ProfileOutlined } from '@eventespresso/icons';\nimport { intervalsToOptions, Intervals, DATE_INTERVALS } from '@eventespresso/dates';\nimport type { EspressoFormProps } from '@eventespresso/form';\n\nimport { validate } from './formValidation';\nimport type { BulkEditFormShape } from './types';\nimport { useMemoStringify } from '@eventespresso/hooks';\n\ntype DateFormConfig = EspressoFormProps<BulkEditFormShape>;\n\nconst unitOptions = intervalsToOptions(\n\tpick<Intervals, keyof Intervals>(['months', 'weeks', 'days', 'hours', 'minutes'], DATE_INTERVALS),\n\ttrue\n);\n\nconst useBulkEditFormConfig = (config?: EspressoFormProps<BulkEditFormShape>): DateFormConfig => {\n\tconst { onSubmit } = config;\n\n\tconst onSubmitFrom: DateFormConfig['onSubmit'] = useCallback(\n\t\t(values, form, ...restParams) => {\n\t\t\treturn onSubmit(values, form, ...restParams);\n\t\t},\n\t\t[onSubmit]\n\t);\n\n\tconst adjacentFormItemProps = useMemoStringify({\n\t\tclassName: 'ee-form-item-pair',\n\t});\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\t...config,\n\t\t\tonSubmit: onSubmitFrom,\n\t\t\tvalidate,\n\t\t\tlayout: 'horizontal',\n\t\t\tdebugFields: ['values', 'errors'],\n\t\t\tsections: [\n\t\t\t\t{\n\t\t\t\t\tname: 'basics',\n\t\t\t\t\ticon: ProfileOutlined,\n\t\t\t\t\ttitle: __('Basics'),\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\tlabel: __('Name'),\n\t\t\t\t\t\t\tfieldType: 'text',\n\t\t\t\t\t\t\tmin: 3,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'description',\n\t\t\t\t\t\t\tlabel: __('Description'),\n\t\t\t\t\t\t\tfieldType: 'simple-text-editor',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'dates',\n\t\t\t\t\ticon: CalendarOutlined,\n\t\t\t\t\ttitle: __('Dates'),\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'shiftDates',\n\t\t\t\t\t\t\tlabel: __('Shift dates'),\n\t\t\t\t\t\t\tfieldType: 'group',\n\t\t\t\t\t\t\tformControlProps: {\n\t\t\t\t\t\t\t\tclassName: 'shift-dates',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsubFields: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\t\t\t\tfieldType: 'number',\n\t\t\t\t\t\t\t\t\tmin: 1,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'unit',\n\t\t\t\t\t\t\t\t\tfieldType: 'select',\n\t\t\t\t\t\t\t\t\toptions: unitOptions,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'type',\n\t\t\t\t\t\t\t\t\tfieldType: 'select',\n\t\t\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: '',\n\t\t\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: __('earlier'),\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'earlier',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: __('later'),\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'later',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'details',\n\t\t\t\t\ticon: ControlOutlined,\n\t\t\t\t\ttitle: __('Details'),\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'capacity',\n\t\t\t\t\t\t\tlabel: __('Capacity'),\n\t\t\t\t\t\t\tfieldType: 'number',\n\t\t\t\t\t\t\tparseAsInfinity: true,\n\t\t\t\t\t\t\tmin: -1,\n\t\t\t\t\t\t\tformControlProps: adjacentFormItemProps,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t],\n\t\t}),\n\t\t[adjacentFormItemProps, config, onSubmitFrom]\n\t);\n};\n\nexport default useBulkEditFormConfig;\n","import { useCallback } from 'react';\n\nimport { useBulkEdit } from '@eventespresso/services';\nimport { useDatetimes, useBulkEditDatetimes, formToBulkUpdateInput } from '@eventespresso/edtr-services';\n\nimport type { BulkEditFormShape } from './types';\n\ntype Callback = (values: BulkEditFormShape) => void;\n\nconst useSubmitForm = (onClose: VoidFunction): Callback => {\n\tconst { getSelected, unSelectAll } = useBulkEdit();\n\tconst allDates = useDatetimes();\n\tconst { updateEntities } = useBulkEditDatetimes();\n\treturn useCallback<Callback>(\n\t\t(formData) => {\n\t\t\t// pull the shutter down\n\t\t\tonClose();\n\t\t\t// back to basics\n\t\t\tunSelectAll();\n\t\t\t// prepare mutation input from data\n\t\t\tconst input = formToBulkUpdateInput(formData, allDates, getSelected());\n\t\t\t// do the thing\n\t\t\tupdateEntities(input);\n\t\t},\n\t\t[allDates, getSelected, onClose, unSelectAll, updateEntities]\n\t);\n};\n\nexport default useSubmitForm;\n","import { __ } from '@eventespresso/i18n';\n\nimport { BulkEditDetails } from '@eventespresso/ee-components';\nimport useBulkEditFormConfig from './useBulkEditFormConfig';\nimport useSubmitForm from './useSubmitForm';\n\ntype EditDetailsProps = {\n\tisOpen: boolean;\n\tonClose: VoidFunction;\n};\n\nconst EditDetails: React.FC<EditDetailsProps> = ({ onClose, isOpen }) => {\n\tconst onSubmit = useSubmitForm(onClose);\n\tconst formConfig = useBulkEditFormConfig({ onSubmit });\n\n\treturn (\n\t\t<BulkEditDetails\n\t\t\tformConfig={formConfig}\n\t\t\tisOpen={isOpen}\n\t\t\tonClose={onClose}\n\t\t\ttitle={__('Bulk edit date details')}\n\t\t\twarning={__('any changes will be applied to ALL of the selected dates.')}\n\t\t/>\n\t);\n};\n\nexport default EditDetails;\n","import { useCallback } from 'react';\n\nimport { useBulkEdit } from '@eventespresso/services';\nimport { useBulkDeleteDatetimes } from '@eventespresso/edtr-services';\n\nimport type { OnDeleteProps } from './types';\n\ntype OnDelete = (props: OnDeleteProps) => VoidFunction;\n\nconst useOnDelete: OnDelete = ({ areTrashedDates, onClose }) => {\n\tconst { getSelected, unSelectAll } = useBulkEdit();\n\tconst bulkDelete = useBulkDeleteDatetimes();\n\treturn useCallback<VoidFunction>(() => {\n\t\t// pull the shutter down\n\t\tonClose();\n\t\t// back to basics\n\t\tunSelectAll();\n\n\t\t// goodbye folks :wave:\n\t\tbulkDelete(getSelected(), areTrashedDates);\n\t}, [areTrashedDates, bulkDelete, getSelected, onClose, unSelectAll]);\n};\n\nexport default useOnDelete;\n","import { useEffect } from 'react';\n\nimport { __ } from '@eventespresso/i18n';\n\nimport { useConfirmationDialog } from '@eventespresso/ui-components';\nimport useOnDelete from './useOnDelete';\nimport { OnDeleteProps } from './types';\n\nconst Delete: React.FC<OnDeleteProps> = ({ areTrashedDates, onClose }) => {\n\tconst onDelete = useOnDelete({ areTrashedDates, onClose });\n\n\tconst { confirmationDialog, onOpen } = useConfirmationDialog({\n\t\tmessage: areTrashedDates\n\t\t\t? __('Are you sure you want to permanently delete these datetimes? This action can NOT be undone!')\n\t\t\t: __('Are you sure you want to trash these datetimes?'),\n\t\ttitle: areTrashedDates ? __('Delete datetimes permanently') : __('Trash datetimes'),\n\t\tonConfirm: onDelete,\n\t\tonCancel: onClose,\n\t});\n\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\tuseEffect(() => onOpen(), []);\n\n\treturn <>{confirmationDialog}</>;\n};\n\nexport default Delete;\n","import { useState, useCallback } from 'react';\n\nimport { __ } from '@eventespresso/i18n';\n\nimport { BulkActions } from '@eventespresso/ee-components';\nimport { Collapsible } from '@eventespresso/ui-components';\nimport { useDisclosure, useMemoStringify } from '@eventespresso/hooks';\nimport { withFeature } from '@eventespresso/services';\nimport { useDatesListFilterState, useShowDatetimeBA, hooks } from '@eventespresso/edtr-services';\nimport { DatetimeStatus } from '@eventespresso/predicates';\nimport { useBulkEdit } from '@eventespresso/services';\nimport type { BulkActionsProps } from '@eventespresso/ui-components';\n\nimport Checkbox from '../../tableView/Checkbox';\nimport { EditDetails } from '../details';\nimport { Delete } from '../delete';\n\ntype Action = 'edit-details' | 'delete' | '';\n\nconst actions: Array<Action> = ['edit-details', 'delete', ''];\n\nconst Actions: React.FC = () => {\n\tconst [action, setAction] = useState<Action>('');\n\tconst bulkEdit = useBulkEdit();\n\tconst [showBulkActions] = useShowDatetimeBA();\n\n\tconst { isOpen, onOpen, onClose } = useDisclosure();\n\n\tconst { status } = useDatesListFilterState();\n\n\tconst areTrashedDates = status === DatetimeStatus.trashedOnly;\n\n\tconst options = useMemoStringify(\n\t\thooks.applyFilters('eventEditor.datetimes.bulkEdit.actions', [\n\t\t\t{\n\t\t\t\tvalue: '',\n\t\t\t\tlabel: __('bulk actions'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 'edit-details',\n\t\t\t\tlabel: __('edit datetime details'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 'delete',\n\t\t\t\tlabel: areTrashedDates ? __('delete datetimes') : __('trash datetimes'),\n\t\t\t},\n\t\t])\n\t);\n\n\tconst onApply = useCallback<BulkActionsProps<Action>['onApply']>(\n\t\t(newAction) => {\n\t\t\tsetAction(newAction);\n\t\t\t// if it's a core action\n\t\t\tif (actions.includes(newAction)) {\n\t\t\t\tonOpen();\n\t\t\t}\n\t\t\thooks.doAction('eventEditor.datetimes.bulkEdit.apply', newAction, bulkEdit);\n\t\t},\n\t\t[bulkEdit, onOpen]\n\t);\n\n\treturn (\n\t\t<Collapsible show={showBulkActions}>\n\t\t\t<BulkActions\n\t\t\t\tCheckbox={Checkbox}\n\t\t\t\tdefaultAction=''\n\t\t\t\tid={'ee-bulk-edit-dates-actions'}\n\t\t\t\tonApply={onApply}\n\t\t\t\toptions={options}\n\t\t\t/>\n\t\t\t{isOpen && (\n\t\t\t\t<>\n\t\t\t\t\t{action === 'edit-details' && <EditDetails isOpen={true} onClose={onClose} />}\n\t\t\t\t\t{action === 'delete' && <Delete areTrashedDates={areTrashedDates} onClose={onClose} />}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</Collapsible>\n\t);\n};\n\nexport default withFeature('use_bulk_edit')(Actions);\n","import { __ } from '@eventespresso/i18n';\n\nimport { EntityTable } from '@eventespresso/ee-components';\nimport useHeaderRowGenerator from './useHeaderRowGenerator';\nimport useBodyRowGenerator from './useBodyRowGenerator';\nimport {\n\tdatesList,\n\tdomain,\n\tuseDatesListFilterState,\n\tuseFilteredDateIds,\n\tuseReorderDatetimes,\n} from '@eventespresso/edtr-services';\nimport { withBulkEdit } from '@eventespresso/services';\nimport { Actions as BulkEditActions } from '../bulkEdit';\n\nimport './styles.scss';\n\n/**\n * Displays event date details in a standard list table like view\n */\nconst TableView: React.FC = () => {\n\tconst filterState = useDatesListFilterState();\n\tconst filteredDateIds = useFilteredDateIds();\n\n\tconst { sortResponder: sortDates } = useReorderDatetimes(filteredDateIds);\n\n\tconst bodyRowGenerator = useBodyRowGenerator();\n\tconst headerRowGenerator = useHeaderRowGenerator();\n\n\treturn (\n\t\t<>\n\t\t\t<BulkEditActions />\n\t\t\t<EntityTable\n\t\t\t\tbodyRowGenerator={bodyRowGenerator}\n\t\t\t\tdomain={domain}\n\t\t\t\tentityIds={filteredDateIds}\n\t\t\t\tfilterState={filterState}\n\t\t\t\theaderRowGenerator={headerRowGenerator}\n\t\t\t\tlistId={datesList}\n\t\t\t\tonSort={sortDates}\n\t\t\t\ttableCaption={__('Event Dates')}\n\t\t\t\ttableId='date-entities-table-view'\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default withBulkEdit(TableView);\n","var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\n\nvar reduce =\n/*#__PURE__*/\n_curry3(_reduce);\n\nmodule.exports = reduce;","var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _pipe =\n/*#__PURE__*/\nrequire(\"./internal/_pipe\");\n\nvar reduce =\n/*#__PURE__*/\nrequire(\"./reduce\");\n\nvar tail =\n/*#__PURE__*/\nrequire(\"./tail\");\n/**\n * Performs left-to-right function composition. The first argument may have\n * any arity; the remaining arguments must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\n\n\nfunction pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}\n\nmodule.exports = pipe;","var _isArray =\n/*#__PURE__*/\nrequire(\"./_isArray\");\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\n\nfunction _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}\n\nmodule.exports = _checkForMethod;","function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}\n\nmodule.exports = _pipe;","var _checkForMethod =\n/*#__PURE__*/\nrequire(\"./internal/_checkForMethod\");\n\nvar _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar slice =\n/*#__PURE__*/\nrequire(\"./slice\");\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\n\n\nvar tail =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_checkForMethod('tail',\n/*#__PURE__*/\nslice(1, Infinity)));\n\nmodule.exports = tail;","var _checkForMethod =\n/*#__PURE__*/\nrequire(\"./internal/_checkForMethod\");\n\nvar _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\n\nvar slice =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\nmodule.exports = slice;"],"sourceRoot":""}
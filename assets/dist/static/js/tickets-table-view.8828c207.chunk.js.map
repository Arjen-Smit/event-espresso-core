{"version":3,"sources":["../domains/eventEditor/src/ui/tickets/TicketRegistrationsLink.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/cardView/TicketQuantity.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/editable/EditableDesc.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/editable/EditableName.tsx","../domains/eventEditor/src/ui/tickets/hooks/useRecalculateBasePrice.ts","../domains/eventEditor/src/ui/tickets/ticketsList/editable/EditablePrice.tsx","../domains/eventEditor/src/ui/tickets/hooks/useTicketsActionMenuItems.ts","../domains/eventEditor/src/ui/tickets/ticketsList/actionsMenu/TicketActionsMenu.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/tableView/Checkbox.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/tableView/useHeaderRowGenerator.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/tableView/useBodyRowGenerator.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/bulkEdit/details/formValidation.ts","../domains/eventEditor/src/ui/tickets/ticketsList/bulkEdit/details/useBulkEditFormConfig.ts","../domains/eventEditor/src/ui/tickets/ticketsList/bulkEdit/details/useSubmitForm.ts","../domains/eventEditor/src/ui/tickets/ticketsList/bulkEdit/details/EditDetails.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/bulkEdit/delete/useOnDelete.ts","../domains/eventEditor/src/ui/tickets/ticketsList/bulkEdit/delete/Delete.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/bulkEdit/prices/buttons/EditModeButtons.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/bulkEdit/prices/buttons/FooterButtons.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/bulkEdit/prices/editTogether/useOnSubmitPrices.ts","../domains/eventEditor/src/ui/tickets/ticketsList/bulkEdit/prices/editTogether/EditTogether.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/bulkEdit/prices/editSeparately/TPCInstance.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/bulkEdit/prices/editSeparately/useManageTPCStates.ts","../domains/eventEditor/src/ui/tickets/ticketsList/bulkEdit/prices/editSeparately/useOnSubmit.ts","../domains/eventEditor/src/ui/tickets/ticketsList/bulkEdit/prices/editSeparately/EditSeparately.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/bulkEdit/prices/EditPrices.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/bulkEdit/actions/Actions.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/tableView/TableView.tsx"],"names":["TicketRegistrationsLink","ticket","admin","useConfig","siteUrl","adminUrl","getAdminUrl","adminSiteUrl","page","ADMIN_ROUTES","REGISTRATIONS","eventId","useEventId","regListUrl","addQueryArgs","event_id","ticket_id","dbId","return","countTitle","__","tooltip","tooltipProps","useMemoStringify","placement","count","registrationCount","title","emphasizeZero","offset","href","React","memo","getPropsAreEqual","TicketQuantity","entity","updateEntity","useTicketMutator","id","onChange","useCallback","qty","quantity","parseInfinity","onChangeValue","value","EditableDesc","className","onChangeDesc","description","ticketDesc","EditableName","view","lineCount","onChangeName","name","ticketName","fitText","tag","useRecalculateBasePrice","ticketId","getDataState","useInitialState","defaultBasePrice","useDefaultBasePrice","mutatePrices","useMutatePrices","updateTicket","ticketPrice","tpcData","updatedTicket","price","getBasePrice","prices","newPrices","order","isNew","calculateBasePrice","then","relatedPriceIds","reverseCalculate","EditablePrice","recalculateBasePrice","onChangePrice","amount","parseFloat","wrapperProps","placeholder","useTicketsActionMenuItems","useEntityActionsMenuItems","TicketActionsMenu","props","menuItems","Checkbox","visibleTicketIds","useEdtrState","visibleEntityIds","useHeaderRowGenerator","filterState","displayStartOrEndDate","cells","key","type","filter","filterCellByStartOrEndDate","primary","useBodyRowGenerator","formatAmount","useMoneyDisplay","sortingEnabled","bgClassName","getTicketBackgroundColorClassName","shortenGuid","statusClassName","ticketStatus","cellsData","format","Date","startDate","ENTITY_LIST_DATE_TIME_FORMAT","endDate","sold","pipe","addZebraStripesOnMobile","validate","values","a","yupToFinalFormErrors","validationSchema","yup","min","unitOptions","intervalsToOptions","pick","DATE_INTERVALS","useBulkEditFormConfig","config","onSubmit","onSubmitFrom","form","restParams","adjacentFormItemProps","useMemo","layout","debugFields","sections","icon","ProfileOutlined","fields","label","fieldType","CalendarOutlined","formControlProps","subFields","options","ControlOutlined","parseAsInfinity","useSubmitForm","onClose","useBulkEdit","getSelected","unSelectAll","allTickets","useTickets","updateEntities","useBulkEditTickets","formData","input","formToBulkUpdateInput","EditDetails","isOpen","formConfig","warning","useOnDelete","areTrashedTickets","bulkDelete","useBulkDeleteTickets","Delete","onDelete","useConfirmationDialog","message","onConfirm","onCancel","confirmationDialog","onOpen","useEffect","EditModeButtons","setEditMode","onClickTogether","onClickSeparate","display","alignItems","justifyContent","height","onClick","buttonText","orientation","FooterButtons","onReset","align","topBordered","buttonType","ButtonType","PRIMARY","useOnSubmitPrices","useDataState","relatedPrices","useTicketPrices","deletePrices","useBulkDeletePrices","nonDefaultPrices","isNotDefault","getGuids","Promise","all","map","parsedAmount","toBoolean","isTaxable","withTPCContext","addDefaultPrices","useAddDefaultPrices","TPCInstance","setTPCState","getData","sprintf","useOnSubmit","getDataStates","submitPrices","Object","dataState","EditSeparately","dataStates","useRef","current","useManageTPCStates","ticketIds","Instance","EditPrices","useState","editMode","closeOnOverlayClick","Actions","action","setAction","useDisclosure","useTicketsListFilterState","status","TicketsStatus","trashedOnly","onApply","defaultAction","withBulkEdit","useTicketsListContext","filteredEntities","sortTickets","useReorderTickets","sortResponder","bodyRowGenerator","headerRowGenerator","entities","tableId","tableCaption","onSort"],"mappings":"uHAAA,6EAgBMA,EAA2C,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEvCC,EACRC,sBADHC,QAAWF,MAENG,EAAWC,sBAAY,CAAEC,aAAcL,EAAOM,KAAMC,eAAaC,gBACjEC,EAAUC,uBACVC,EAAaC,uBAAaT,EAAU,CACzCU,SAAUJ,EACVK,UAAWf,EAAOgB,KAClBC,OAAQ,SAEHC,EAAaC,aAAG,wBAChBC,EAAUD,aAAG,uCACbE,EAAeC,2BAA+B,CAAEC,UAAW,QAEjE,OACC,kBAAC,YAAD,CAAWC,MAAOxB,EAAOyB,kBAAmBC,MAAOR,EAAYS,eAAe,EAAOC,OAAQ,CAAC,IAAK,IAClG,kBAAC,oBAAD,CAAmBC,KAAMjB,EAAYQ,QAASA,EAASC,aAAcA,MAKzDS,QAAMC,KAAKhC,EAAyBiC,2BAAiB,CAAC,SAAU,c,kCCtC/E,mDAQMC,EAA4C,SAAC,GAAwB,IAAdjC,EAAa,EAArBkC,OAC5CC,EAAiBC,2BAAiBpC,EAAOqC,IAAzCF,aAEFG,EAAkCC,uBACvC,SAACC,GACA,IAAMC,EAAWC,wBAAcF,GAC3BC,IAAazC,EAAOyC,UACvBN,EAAa,CAAEM,eAGjB,CAACzC,EAAOyC,SAAUN,IAGnB,OACC,kBAAC,qBAAD,CACCQ,cAAeL,EACfM,MAAK,UAAK5C,EAAOyC,UACjBrB,QAASD,aAAG,4CAKAW,QAAMC,KAAKE,EAAgBD,2BAAiB,CAAC,SAAU,c,2LClBhEa,EAA4C,SAAC,GAAmC,IAAzB7C,EAAwB,EAAhCkC,OAAgBY,EAAgB,EAAhBA,UAC5DX,EAAiBC,2BAAiBpC,EAAOqC,IAAzCF,aAEFY,EAAeR,uBACpB,SAACS,GACIA,IAAgBhD,EAAOgD,aAC1Bb,EAAa,CAAEa,kBAGjB,CAAChD,EAAOgD,YAAab,IAGhBf,EAAUD,aAAG,uBAEb8B,EAAajD,EAAOgD,aAAe5B,EAEzC,OACC,kBAAC,qBAAD,CAAoB0B,UAAWA,EAAWH,cAAeI,EAAc3B,QAASA,EAASwB,MAAOK,KAInFnB,MAAMC,KAAKc,EAAcb,2BAAiB,CAAC,SAAU,iBCpB9DkB,EAA4C,SAAC,GAAkD,IAAhDJ,EAA+C,EAA/CA,UAAmB9C,EAA4B,EAApCkC,OAAoC,IAApBiB,YAAoB,MAAb,OAAa,EAC3FhB,EAAiBC,2BAAiBpC,EAAOqC,IAAzCF,aAEFiB,EAAqB,SAATD,GAAmB,EAE/BE,EAAed,uBACpB,SAACe,GACIA,IAAStD,EAAOsD,MACnBnB,EAAa,CAAEmB,WAGjB,CAACtD,EAAOsD,KAAMnB,IAGTf,EAAUD,aAAG,iBAEboC,EAAavD,EAAOsD,MAAQlC,EAElC,OACC,kBAAC,iBAAD,CACC0B,UAAWA,EACXU,QAAkB,SAATL,EACTC,UAAWA,EACXT,cAAeU,EACfI,IAAc,UAATN,EAAmB,IAAM,KAC9B/B,QAASA,EACTwB,MAAOW,KAKKzB,MAAMC,KAAKmB,EAAclB,2BAAiB,CAAC,SAAU,U,mnBClCpE,IA+Ce0B,EA/CiB,SAACC,GAEhC,IAAMC,EAAeC,0BAAgB,CAAEF,aAEjCG,EAAmBC,gCACnBC,EAAeC,4BACCC,EAAiB9B,2BAAiBuB,GAAhDxB,aAER,OAAOI,uBACN,SAAC4B,GAAiB,IAAD,IACZC,EAAUR,EAAa,MAErBS,EAAa,iBAAQD,SAAR,aAAQ,EAASpE,QAAjB,IAAyBsE,MAAOH,IAMnD,GALAC,EAAO,OAAQA,GAAR,IAAiBpE,OAAQqE,KAEPE,uBAAY,UAACH,SAAD,aAAC,EAASI,QAGxB,CAAC,IAAD,EAChBC,EAAS,QAETX,GAFS,IAESY,MAAO,EAAGC,OAAO,KAF1B,qBAMXP,SANW,aAMX,EAASI,SAEbJ,EAAO,OAAQA,GAAR,IAAiBI,OAAQC,IAGjC,IAAMA,EAAYG,6BAAmBR,GAErCJ,EAAaS,GAAWI,MAAK,SAACC,GAC7BZ,EAAa,CAEZI,MAAOH,EAEPY,kBAAkB,EAElBP,OAAQM,SAIX,CAAChB,EAAkBF,EAAcI,EAAcE,K,QCxC3Cc,EAA8C,SAAC,GAAmC,IAAzBhF,EAAwB,EAAhCkC,OAAgBY,EAAgB,EAAhBA,UAChEmC,EAAuBvB,EAAwB1D,EAAOqC,IACtD6C,EAAgB3C,uBACrB,YAA4B,IAAzB4C,EAAwB,EAAxBA,OACIb,EAAQc,WAAWD,GACrBb,IAAUtE,EAAOsE,OACpBW,EAAqBX,KAGvB,CAACW,EAAsBjF,EAAOsE,QAGzBe,EAAe/D,2BAAiB,CAAEwB,cAExC,OACC,kBAAC,gBAAD,CACCT,GAAIrC,EAAOqC,GACX8C,OAAQnF,EAAOsE,MACfgB,YAAanE,aAAG,gBAChBkE,aAAcA,EACd/C,SAAU4C,EACVzB,IAAK,KACLrC,QAASD,aAAG,2BAKAW,MAAMC,KAAKiD,EAAehD,2BAAiB,CAAC,SAAU,Y,uGC/BtDuD,EAJmB,SAACvF,GAClC,OAAOwF,YAA0B,SAAUxF,I,QCEtCyF,EAAiE,SAAC,GAA0B,IAAxBvD,EAAuB,EAAvBA,OAAWwD,EAAY,kBAC1FC,EAAYJ,EAA0BrD,GAE5C,OAAO,kBAAC,oBAAD,OAAuBwD,EAAvB,CAA8BC,UAAWA,MAGlC7D,QAAMC,KAAK0D,EAAmBzD,2BAAiB,CAAC,SAAU,c,oGCF1D4D,EANiC,SAACF,GAAW,IACnDG,EAAqBC,yBAArBD,iBAER,OAAO,kBAAC,iBAAD,OAAoBH,EAApB,CAA2BK,iBAAkBF,MCyGtCG,EAxGe,WAC7B,OAAOzD,uBAAsC,SAAC0D,GAAiB,IACtDC,EAA0BD,EAA1BC,sBA4FR,MAAO,CACNC,MA3F8B,CAC9B,CACCC,IAAK,SACLC,KAAM,OACNvD,UAAW,kFACXF,MAAO,IAER,CACCwD,IAAK,WACLC,KAAM,OACNvD,UAAW,8EACXF,MAAO,kBAAC,EAAD,OAER,CACCwD,IAAK,KACLC,KAAM,OACNvD,UAAW,4FACXF,MAAOzB,aAAG,OAEX,CACCiF,IAAK,OACLC,KAAM,OACNvD,UAAW,+EACXF,MAAOzB,aAAG,SAEX,CACCiF,IAAK,QACLC,KAAM,OACNvD,UAAW,sFACXF,MACC,oCACC,0BAAME,UAAW,8BAA+B3B,aAAG,iBACnD,0BAAM2B,UAAW,+BAAgC3B,aAAG,cAIvD,CACCiF,IAAK,MACLC,KAAM,OACNvD,UAAW,+EACXF,MACC,oCACC,0BAAME,UAAW,8BAA+B3B,aAAG,cACnD,0BAAM2B,UAAW,+BAAgC3B,aAAG,WAIvD,CACCiF,IAAK,QACLC,KAAM,OACNvD,UACC,+FACDF,MAAOzB,aAAG,UAEX,CACCiF,IAAK,WACLC,KAAM,OACNvD,UACC,kGACDF,MAAOzB,aAAG,aAEX,CACCiF,IAAK,OACLC,KAAM,OACNvD,UACC,8FACDF,MAAOzB,aAAG,SAEX,CACCiF,IAAK,gBACLC,KAAM,OACNvD,UACC,4GACDF,MACC,oCACC,0BAAME,UAAW,8BAA+B3B,aAAG,kBACnD,0BAAM2B,UAAW,+BAAgC3B,aAAG,WAIvD,CACCiF,IAAK,UACLC,KAAM,OACNvD,UAAW,yFACXF,MAAO,0BAAME,UAAW,8BAA+B3B,aAAG,cAIpCmF,OAAOC,qCAA2BL,IAIzDpD,UAAW,yCACXsD,IAAK,oBACLI,SAAS,EACTH,KAAM,SAEL,K,kFC4BWI,G,QApHa,WAA+B,IAClDC,EAAiBC,4BAAjBD,aAER,OAAOnE,uBACN,YAAsC,IAA3BvC,EAA0B,EAAlCkC,OAAgB+D,EAAkB,EAAlBA,YACVC,EAA0CD,EAA1CC,sBAAuBU,EAAmBX,EAAnBW,eAEzBC,EAAcC,4CAAkC9G,GAChDqC,EAAKrC,EAAOgB,MAAQ+F,sBAAY/G,EAAOqC,IACvC2E,EAAkBC,uBAAajH,GAE/BsD,EAAO,CACZ8C,IAAK,OACLC,KAAM,OACNvD,UACC,uHACDF,MAAOgE,EACN5G,EAAOsD,KAEP,kBAAC,IAAD,CACCR,UAAW,0CACXZ,OAAQlC,EACRmD,KAAM,WAKHV,EAAW,CAChB2D,IAAK,WACLC,KAAM,OACNvD,UACC,+FACDF,MAAOgE,EAAiB5G,EAAOyC,SAAW,kBAACR,EAAA,EAAD,CAAgBC,OAAQlC,KAG7DkH,EAAyB,CAC9B,CACCd,IAAK,SACLC,KAAM,OACNvD,UAAU,oDAAD,OAAsD+D,EAAtD,gCACTjE,MAAO,yBAAKE,UAAW,kCAAmC9C,EAAOsD,OAElE,CACC8C,IAAK,WACLC,KAAM,OACNvD,UAAW,2EACXF,MAAO,kBAAC,EAAD,CAAUP,GAAIrC,EAAOqC,MAE7B,CACC+D,IAAK,KACLC,KAAM,OACNvD,UAAW,yFACXF,MAAOP,GAERiB,EACA,CACC8C,IAAK,QACLC,KAAM,OACNvD,UAAW,8EACXF,MAAOuE,iBAAO,IAAIC,KAAKpH,EAAOqH,WAAYC,iCAE3C,CACClB,IAAK,MACLC,KAAM,OACNvD,UAAW,4EACXF,MAAOuE,iBAAO,IAAIC,KAAKpH,EAAOuH,SAAUD,iCAEzC,CACClB,IAAK,QACLC,KAAM,OACNvD,UACC,+FACDF,MAAO8D,EAAa1G,EAAOsE,QAE5B7B,EACA,CACC2D,IAAK,OACLC,KAAM,OACNvD,UACC,2FACDF,MAAO5C,EAAOwH,MAEf,CACCpB,IAAK,gBACLC,KAAM,OACNvD,UACC,yGACDF,MAAOgE,EAAiB,IAAM,kBAAC7G,EAAA,EAAD,CAAyBC,OAAQA,KAEhE,CACCoG,IAAK,UACLC,KAAM,OACNvD,UAAW,mEACXF,MAAOgE,EAAiB,IAAM,kBAACnB,EAAA,EAAD,CAAmBvD,OAAQlC,MAW3D,MAAO,CACNmG,MANasB,YACbnB,YAAOC,qCAA2BL,IAClCwB,kCAJe,CAAC,MAAO,SAAU,OAAQ,YAE5BD,CAGZP,GAIDpE,UAAU,gCAAD,OAAkCkE,GAC3C3E,GAAG,gCAAD,OAAkCrC,EAAOqC,IAC3C+D,IAAI,OAAD,OAASpG,EAAOqC,IACnBgE,KAAM,SAGR,CAACK,M,yJCjIUiB,EAAQ,+BAAG,WAAOC,GAAP,SAAAC,EAAA,sEACVC,+BAAqBC,EAAkBH,GAD7B,mFAAH,sDAIfG,EAAmBC,SAAW,CACnC1E,KAAM0E,WAAaC,IAAI,GAAG,kBAAM9G,aAAG,+C,ikBCGpC,IAAM+G,EAAcC,6BACnBC,YAAiC,CAAC,SAAU,QAAS,OAAQ,QAAS,WAAYC,mBAClF,GA0IcC,EAvIe,SAACC,GAAmE,IACzFC,EAAaD,EAAbC,SAEFC,EAA2ClG,uBAChD,SAACqF,EAAQc,GAAyB,IAAD,uBAAfC,EAAe,iCAAfA,EAAe,kBAChC,OAAOH,EAAQ,WAAR,GAASZ,EAAQc,GAAjB,OAA0BC,MAElC,CAACH,IAGII,EAAwBtH,2BAAiB,CAC9CwB,UAAW,sBAGZ,OAAO+F,mBACN,yBACIN,GADJ,IAECC,SAAUC,EACVd,WACAmB,OAAQ,aACRC,YAAa,CAAC,SAAU,UACxBC,SAAU,CACT,CACC1F,KAAM,SACN2F,KAAMC,IACNxH,MAAOP,aAAG,UACVgI,OAAQ,CACP,CACC7F,KAAM,OACN8F,MAAOjI,aAAG,QACVkI,UAAW,OACXpB,IAAK,GAEN,CACC3E,KAAM,cACN8F,MAAOjI,aAAG,eACVkI,UAAW,cAId,CACC/F,KAAM,QACN2F,KAAMK,IACN5H,MAAOP,aAAG,SACVgI,OAAQ,CACP,CACC7F,KAAM,aACN8F,MAAOjI,aAAG,eACVkI,UAAW,QACXE,iBAAkB,CACjBzG,UAAW,eAEZ0G,UAAW,CACV,CACClG,KAAM,QACN+F,UAAW,SACXpB,IAAK,GAEN,CACC3E,KAAM,OACN+F,UAAW,SACXI,QAASvB,GAEV,CACC5E,KAAM,OACN+F,UAAW,SACXI,QAAS,CACR,CACCL,MAAO,GACPxG,MAAO,IAER,CACCwG,MAAOjI,aAAG,WACVyB,MAAO,WAER,CACCwG,MAAOjI,aAAG,SACVyB,MAAO,eAQd,CACCU,KAAM,UACN2F,KAAMS,IACNhI,MAAOP,aAAG,WACVgI,OAAQ,CACP,CACC7F,KAAM,WACN8F,MAAOjI,aAAG,qBACVkI,UAAW,SACXE,iBAAkBX,EAClBe,iBAAiB,EACjB1B,KAAM,GAEP,CACC3E,KAAM,OACN8F,MAAOjI,aAAG,kBACVkI,UAAW,SACXM,iBAAiB,EACjBJ,iBAAkBX,EAClBX,IAAK,GAEN,CACC3E,KAAM,MACN8F,MAAOjI,aAAG,oBACVkI,UAAW,SACXE,iBAAkBX,EAClBX,IAAK,GAEN,CACC3E,KAAM,MACN8F,MAAOjI,aAAG,oBACVkI,UAAW,SACXM,iBAAiB,EACjBJ,iBAAkBX,EAClBX,KAAM,GAEP,CACC3E,KAAM,aACN8F,MAAOjI,aAAG,mBACVkI,UAAW,SACXE,iBAAkBX,UAMvB,CAACA,EAAuBL,EAAQE,KC1HnBmB,EAnBO,SAACC,GAAqC,IAAD,EACrBC,wBAA7BC,EADkD,EAClDA,YAAaC,EADqC,EACrCA,YACfC,EAAaC,uBACXC,EAAmBC,+BAAnBD,eACR,OAAO5H,uBACN,SAAC8H,GAEAR,IAEAG,IAEA,IAAMM,EAAQC,gCAAsBF,EAAUJ,EAAYF,KAE1DI,EAAeG,KAEhB,CAACL,EAAYF,EAAaF,EAASG,EAAaG,KCGnCK,EAfiC,SAAC,GAAyB,IAAvBX,EAAsB,EAAtBA,QAASY,EAAa,EAAbA,OACrDjC,EAAWoB,EAAcC,GACzBa,EAAapC,EAAsB,CAAEE,aAE3C,OACC,kBAAC,kBAAD,CACCkC,WAAYA,EACZD,OAAQA,EACRZ,QAASA,EACTnI,MAAOP,aAAG,4BACVwJ,QAASxJ,aAAG,kECCAyJ,EAde,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,kBAAmBhB,EAAc,EAAdA,QAAc,EAC5BC,wBAA7BC,EADyD,EACzDA,YAAaC,EAD4C,EAC5CA,YACfc,EAAaC,iCACnB,OAAOxI,uBAA0B,WAEhCsH,IAEAG,IAGAc,EAAWf,IAAec,KACxB,CAACA,EAAmBC,EAAYf,EAAaF,EAASG,KCK3CgB,EAlByB,SAAC,GAAoC,IAAlCH,EAAiC,EAAjCA,kBAAmBhB,EAAc,EAAdA,QACvDoB,EAAWL,EAAY,CAAEC,oBAAmBhB,YADyB,EAGpCqB,gCAAsB,CAC5DC,QAASN,EACN1J,aAAG,6FACHA,aAAG,iDACNO,MAAOmJ,EAAoB1J,aAAG,8BAAgCA,aAAG,iBACjEiK,UAAWH,EACXI,SAAUxB,IANHyB,EAHmE,EAGnEA,mBAAoBC,EAH+C,EAG/CA,OAY5B,OAFAC,qBAAU,kBAAMD,MAAU,IAEnB,oCAAGD,I,QCXEG,EAAkD,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC3DC,EAAkBpJ,uBAAY,kBAAMmJ,EAAY,cAAa,CAACA,IAC9DE,EAAkBrJ,uBAAY,kBAAMmJ,EAAY,cAAa,CAACA,IACpE,OACC,kBAAC,MAAD,CAAKG,QAAQ,OAAOC,WAAW,SAASC,eAAe,SAASC,OAAO,QACtE,kBAAC,MAAD,KACC,kBAAC,SAAD,CAAQC,QAASN,EAAiBO,WAAY/K,aAAG,8BACjD,2BAAIA,aAAG,qDAER,kBAAC,UAAD,CAASgL,YAAY,WAAWH,OAAO,QACvC,kBAAC,MAAD,KACC,kBAAC,SAAD,CAAQC,QAASL,EAAiBM,WAAY/K,aAAG,8BACjD,2BAAIA,aAAG,gDCZEiL,EAA8C,SAAC,GAAqC,IAAnC5D,EAAkC,EAAlCA,SAAU6D,EAAwB,EAAxBA,QAAShB,EAAe,EAAfA,SAChF,OACC,kBAAC,YAAD,CAAWiB,MAAM,QAAQC,aAAW,GAClCF,GAAW,kBAAC,SAAD,CAAQH,WAAY/K,aAAG,SAAU8K,QAASI,EAAShG,KAAK,UACnEgF,GAAY,kBAAC,SAAD,CAAQa,WAAY/K,aAAG,UAAW8K,QAASZ,IACxD,kBAAC,SAAD,CAAQa,WAAY/K,aAAG,UAAWqL,WAAYC,aAAWC,QAAST,QAASzD,EAAUnC,KAAK,a,iBCkC9EsG,GA3CW,SAAC9C,GAAkD,IAAD,EAChD+C,yBAAnBpI,EADmE,EACnEA,OAAQxE,EAD2D,EAC3DA,OACR+J,EAAgBD,wBAAhBC,YAEc7F,EAAiB9B,6BAA/BD,aACF6B,EAAeC,4BAGf4I,EAAgBC,0BAAgB/C,KAEhCgD,EAAeC,gCAIfC,EAAmBJ,EAAcvG,OAAO4G,gBAG9C,OAAO3K,sBAAW,cAAC,sBAAAsF,EAAA,6DAElBgC,IAFkB,SAIZkD,EAAaI,mBAASF,IAJV,uBAOZG,QAAQC,IAEbtD,IAAcuD,IAAd,+BAAkB,WAAO3J,GAAP,eAAAkE,EAAA,sEAEa7D,EAAaQ,GAF1B,cAEXM,EAFW,gBAKXZ,EAAa,CAClB7B,GAAIsB,EACJW,MAAOiJ,uBAAavN,EAAOsE,OAAS,GACpCS,iBAAkByI,oBAAUxN,EAAO+E,kBACnC0I,UAAWD,oBAAUxN,EAAOyN,WAC5BjJ,OAAQM,IAVQ,2CAAlB,wDATiB,2CAuBhB,CAACiI,EAAchD,EAAa/F,EAAciJ,EAAkBpD,EAASrF,EAAQxE,EAAQkE,KCrB1EwJ,0BAlBqC,SAAC,GAAiB,IAAf7D,EAAc,EAAdA,QAChD8D,EAAmBC,gCAEzBpC,qBAAU,WACTmC,MAEE,IAEH,IAAMnF,EAAWmE,GAAkB9C,GAEnC,OACC,oCACC,kBAAC,wBAAD,MACA,kBAAC,EAAD,CAAerB,SAAUA,EAAU6D,QAASsB,OAKH,CAAEhK,SAAU,KChB3CkK,GAA0C,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EAC/ClB,yBAApB5M,EADmE,EACnEA,OAAQ+N,EAD2D,EAC3DA,QAQhB,OANAvC,qBAAU,WACTsC,EAAYC,OAGV,CAACA,IAGH,oCACC,gCAASC,kBAAQ7M,aAAG,8BAA+BnB,EAAOsD,OAC1D,kBAAC,wBAAD,Q,qkBCZI,ICaQ2K,GAlBK,SAACpE,EAAuBqE,GAC3C,IAAMC,EAAexB,8BAErB,OAAOpK,sBAAW,cAAC,sBAAAsF,EAAA,6DAElBgC,IAFkB,SAKZuD,QAAQC,IAEbe,OAAOxG,OAAOsG,KAAiBZ,IAA/B,+BAAmC,WAAOe,GAAP,SAAAxG,EAAA,sEAE5BsG,EAAaE,GAFe,2CAAnC,wDAPiB,2CAYhB,CAACH,EAAerE,EAASsE,KCWdG,GApBuC,SAAC,GAAiB,IAAfzE,EAAc,EAAdA,QAChDE,EAAgBD,wBAAhBC,YAD8D,EFDrC,WAOjC,IAAMwE,EAAaC,iBAA6B,IAE1CV,EAAcvL,uBACnB,SAAC8L,GAAe,IAAD,EACdE,EAAWE,QAAX,SAA0BF,EAAWE,SAArC,iBAA+CJ,QAA/C,IAA+CA,GAA/C,UAA+CA,EAAWrO,cAA1D,aAA+C,EAAmBqC,GAAKgM,MAExE,CAACE,IAGIL,EAAgB3L,uBAA8C,kBAAMgM,EAAWE,UAAS,CAACF,IAE/F,OAAO1F,mBAAQ,iBAAO,CAAEiF,cAAaI,mBAAkB,CAACJ,EAAaI,IEd9BQ,GAA/BR,EAH8D,EAG9DA,cAAeJ,EAH+C,EAG/CA,YAEjBtF,EAAWyF,GAAYpE,EAASqE,GAEhCS,EAAY5E,IAElB,OACC,oCACE4E,EAAUrB,KAAqB,SAAC3J,GAChC,IAAMiL,EAAWlB,sBAAeG,GAAa,CAAElK,aAC/C,OAAO,kBAACiL,EAAD,CAAUxI,IAAKzC,EAAUmK,YAAaA,OAE9C,kBAAC,EAAD,CAAetF,SAAUA,EAAU6C,SAAUxB,MCAjCgF,GAjBmC,SAAC,GAAyB,IAAvBhF,EAAsB,EAAtBA,QAASY,EAAa,EAAbA,OAAa,EAC1CqE,qBAD0C,WACnEC,EADmE,KACzDrD,EADyD,KAG1E,OACC,kBAAC,kBAAD,CACCjB,OAAQA,EACRZ,QAASA,EACTmF,qBAAqB,EACrBtN,MAAOP,aAAG,6BAER4N,GAAY,kBAAC,EAAD,CAAiBrD,YAAaA,IAC9B,aAAbqD,GAA2B,kBAAC,GAAD,CAAclF,QAASA,IACrC,aAAbkF,GAA2B,kBAAC,GAAD,CAAgBlF,QAASA,MC0CzCoF,GAjDW,WAAO,IAAD,EACHH,mBAAiB,IADd,WACxBI,EADwB,KAChBC,EADgB,OAGKC,0BAA5B3E,EAHuB,EAGvBA,OAAQc,EAHe,EAGfA,OAAQ1B,EAHO,EAGPA,QAGlBgB,EAFawE,cAAXC,SAE6BC,IAAcC,YAE7C/F,EAAUnI,2BAAiB,CAChC,CACCsB,MAAO,GACPwG,MAAOjI,aAAG,iBAEX,CACCyB,MAAO,eACPwG,MAAOjI,aAAG,wBAEX,CACCyB,MAAO,SACPwG,MAAOyB,EAAoB1J,aAAG,kBAAoBA,aAAG,kBAEtD,CACCyB,MAAO,cACPwG,MAAOjI,aAAG,yBAINsO,EAAUlN,uBACf,SAAC2M,GACAC,EAAUD,GACV3D,MAED,CAACA,IAGF,OACC,oCACC,kBAAC,cAAD,CAAa9B,QAASA,EAASgG,QAASA,EAASC,cAAc,KAC9DjF,GACA,oCACa,iBAAXyE,GAA6B,kBAAC,EAAD,CAAazE,QAAQ,EAAMZ,QAASA,IACtD,WAAXqF,GAAuB,kBAAC,EAAD,CAAQrE,kBAAmBA,EAAmBhB,QAASA,IACnE,gBAAXqF,GAA4B,kBAAC,GAAD,CAAYzE,QAAQ,EAAMZ,QAASA,OCjBtD8F,kCAzBa,WAAO,IAAD,EACSC,cAAlC3J,EADyB,EACzBA,YAAa4J,EADY,EACZA,iBAEEC,EAAgBC,4BAAkBF,GAAjDG,cAEFC,EAAmBxJ,IACnByJ,EAAqBlK,IAE3B,OACC,oCACC,kBAAC,GAAD,MACA,kBAAC,cAAD,CACCmK,SAAUN,EACV5J,YAAaA,EACbgK,iBAAkBA,EAClBC,mBAAoBA,EACpBpN,UAAW,uCACXsN,QAAQ,6BACRC,aAAclP,aAAG,WACjBmP,OAAQR","file":"static/js/tickets-table-view.8828c207.chunk.js","sourcesContent":["import React from 'react';\nimport { addQueryArgs } from '@wordpress/url';\nimport { __ } from '@wordpress/i18n';\n\nimport { ADMIN_ROUTES } from '@eventespresso/constants';\nimport { getAdminUrl, useEventId } from '@eventespresso/edtr-services';\nimport { getPropsAreEqual, useConfig } from '@eventespresso/services';\nimport { useMemoStringify } from '@eventespresso/hooks';\nimport { RegistrationsLink, ItemCount } from '@eventespresso/components';\nimport { Ticket } from '@eventespresso/edtr-services';\nimport type { TooltipProps } from '@eventespresso/adapters';\n\ninterface Props {\n\tticket: Ticket;\n}\n\nconst TicketRegistrationsLink: React.FC<Props> = ({ ticket }) => {\n\tconst {\n\t\tsiteUrl: { admin },\n\t} = useConfig();\n\tconst adminUrl = getAdminUrl({ adminSiteUrl: admin, page: ADMIN_ROUTES.REGISTRATIONS });\n\tconst eventId = useEventId();\n\tconst regListUrl = addQueryArgs(adminUrl, {\n\t\tevent_id: eventId,\n\t\tticket_id: ticket.dbId,\n\t\treturn: 'edit',\n\t});\n\tconst countTitle = __('total registrations.');\n\tconst tooltip = __('view registrations for this ticket.');\n\tconst tooltipProps = useMemoStringify<TooltipProps>({ placement: 'top' });\n\n\treturn (\n\t\t<ItemCount count={ticket.registrationCount} title={countTitle} emphasizeZero={false} offset={[12, -4]}>\n\t\t\t<RegistrationsLink href={regListUrl} tooltip={tooltip} tooltipProps={tooltipProps} />\n\t\t</ItemCount>\n\t);\n};\n\nexport default React.memo(TicketRegistrationsLink, getPropsAreEqual(['ticket', 'cacheId']));\n","import React, { useCallback } from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport { parseInfinity, getPropsAreEqual } from '@eventespresso/services';\nimport { InlineEditInfinity, TextProps } from '@eventespresso/components';\nimport { useTicketMutator } from '@eventespresso/edtr-services';\nimport type { TicketItemProps } from '../types';\n\nconst TicketQuantity: React.FC<TicketItemProps> = ({ entity: ticket }) => {\n\tconst { updateEntity } = useTicketMutator(ticket.id);\n\n\tconst onChange: TextProps['onChange'] = useCallback(\n\t\t(qty) => {\n\t\t\tconst quantity = parseInfinity(qty);\n\t\t\tif (quantity !== ticket.quantity) {\n\t\t\t\tupdateEntity({ quantity });\n\t\t\t}\n\t\t},\n\t\t[ticket.quantity, updateEntity]\n\t);\n\n\treturn (\n\t\t<InlineEditInfinity\n\t\t\tonChangeValue={onChange}\n\t\t\tvalue={`${ticket.quantity}`}\n\t\t\ttooltip={__('edit quantity of tickets available...')}\n\t\t/>\n\t);\n};\n\nexport default React.memo(TicketQuantity, getPropsAreEqual(['entity', 'cacheId']));\n","import React, { useCallback } from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport type { TicketItemProps } from '../types';\nimport { useTicketMutator } from '@eventespresso/edtr-services';\nimport { InlineEditTextArea } from '@eventespresso/components';\nimport { getPropsAreEqual } from '@eventespresso/services';\n\ninterface EditableDescProps extends TicketItemProps {\n\tclassName?: string;\n}\n\nconst EditableDesc: React.FC<EditableDescProps> = ({ entity: ticket, className }) => {\n\tconst { updateEntity } = useTicketMutator(ticket.id);\n\n\tconst onChangeDesc = useCallback(\n\t\t(description: string): void => {\n\t\t\tif (description !== ticket.description) {\n\t\t\t\tupdateEntity({ description });\n\t\t\t}\n\t\t},\n\t\t[ticket.description, updateEntity]\n\t);\n\n\tconst tooltip = __('edit description...');\n\n\tconst ticketDesc = ticket.description || tooltip;\n\n\treturn (\n\t\t<InlineEditTextArea className={className} onChangeValue={onChangeDesc} tooltip={tooltip} value={ticketDesc} />\n\t);\n};\n\nexport default React.memo(EditableDesc, getPropsAreEqual(['entity', 'description']));\n","import React, { useCallback } from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport type { TicketItemProps } from '../types';\nimport { useTicketMutator } from '@eventespresso/edtr-services';\nimport { InlineEditText } from '@eventespresso/components';\nimport { getPropsAreEqual } from '@eventespresso/services';\n\ninterface EditableNameProps extends TicketItemProps {\n\tclassName?: string;\n\tview?: 'card' | 'table';\n}\n\nconst EditableName: React.FC<EditableNameProps> = ({ className, entity: ticket, view = 'card' }) => {\n\tconst { updateEntity } = useTicketMutator(ticket.id);\n\n\tconst lineCount = view === 'card' && 2;\n\n\tconst onChangeName = useCallback(\n\t\t(name: string): void => {\n\t\t\tif (name !== ticket.name) {\n\t\t\t\tupdateEntity({ name });\n\t\t\t}\n\t\t},\n\t\t[ticket.name, updateEntity]\n\t);\n\n\tconst tooltip = __('edit title...');\n\n\tconst ticketName = ticket.name || tooltip;\n\n\treturn (\n\t\t<InlineEditText\n\t\t\tclassName={className}\n\t\t\tfitText={view === 'card'}\n\t\t\tlineCount={lineCount}\n\t\t\tonChangeValue={onChangeName}\n\t\t\ttag={view === 'table' ? 'p' : 'h4'}\n\t\t\ttooltip={tooltip}\n\t\t\tvalue={ticketName}\n\t\t/>\n\t);\n};\n\nexport default React.memo(EditableName, getPropsAreEqual(['entity', 'name']));\n","import { useCallback } from 'react';\n\nimport { EntityId } from '@eventespresso/data';\nimport { calculateBasePrice, useInitialState } from '@eventespresso/tpc';\nimport { getBasePrice } from '@eventespresso/predicates';\nimport { useDefaultBasePrice, useMutatePrices } from '@eventespresso/tpc';\nimport { useTicketMutator } from '@eventespresso/edtr-services';\n\ntype Callback = (ticketPrice: number) => void;\n\nconst useRecalculateBasePrice = (ticketId: EntityId): Callback => {\n\t// This will give us the exact state expected by `calculateBasePrice()`\n\tconst getDataState = useInitialState({ ticketId });\n\t// This default price will be added if there is none\n\tconst defaultBasePrice = useDefaultBasePrice();\n\tconst mutatePrices = useMutatePrices();\n\tconst { updateEntity: updateTicket } = useTicketMutator(ticketId);\n\n\treturn useCallback<Callback>(\n\t\t(ticketPrice) => {\n\t\t\tlet tpcData = getDataState(null);\n\t\t\t// Make sure the new ticket price is used\n\t\t\tconst updatedTicket = { ...tpcData?.ticket, price: ticketPrice };\n\t\t\ttpcData = { ...tpcData, ticket: updatedTicket };\n\n\t\t\tconst exitingBasePrice = getBasePrice(tpcData?.prices);\n\t\t\t// if the ticket does not have a base price,\n\t\t\t// that means it was free and now a price has been added ¯\\_(ツ)_/¯\n\t\t\tif (!exitingBasePrice) {\n\t\t\t\tconst newPrices = [\n\t\t\t\t\t// add the default price\n\t\t\t\t\t{ ...defaultBasePrice, order: 1, isNew: true },\n\t\t\t\t\t// add the existing ones, just in case we are dealing with aliens,\n\t\t\t\t\t// don't get me wrong, because only they can have other prices without a base price,\n\t\t\t\t\t// may be their taxation systen works differently, who knows ¯\\_(ツ)_/¯\n\t\t\t\t\t...tpcData?.prices,\n\t\t\t\t];\n\t\t\t\ttpcData = { ...tpcData, prices: newPrices };\n\t\t\t}\n\t\t\t// get the list of updated prices with the amount of base price updated\n\t\t\tconst newPrices = calculateBasePrice(tpcData);\n\n\t\t\tmutatePrices(newPrices).then((relatedPriceIds) => {\n\t\t\t\tupdateTicket({\n\t\t\t\t\t// this is the ticket prices amount\n\t\t\t\t\tprice: ticketPrice,\n\t\t\t\t\t// since ticket price has been changed, we need to go in reverse gear ◀️\n\t\t\t\t\treverseCalculate: true,\n\t\t\t\t\t// Make sure related prices are updated\n\t\t\t\t\tprices: relatedPriceIds,\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\t[defaultBasePrice, getDataState, mutatePrices, updateTicket]\n\t);\n};\n\nexport default useRecalculateBasePrice;\n","import React, { useCallback } from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport type { TicketItemProps } from '../types';\nimport { getPropsAreEqual } from '@eventespresso/services';\nimport { CurrencyInput } from '@eventespresso/components';\nimport useRecalculateBasePrice from '../../hooks/useRecalculateBasePrice';\nimport { useMemoStringify } from '@eventespresso/hooks';\n\ninterface EditablePriceProps extends TicketItemProps {\n\tclassName?: string;\n}\n\nconst EditablePrice: React.FC<EditablePriceProps> = ({ entity: ticket, className }) => {\n\tconst recalculateBasePrice = useRecalculateBasePrice(ticket.id);\n\tconst onChangePrice = useCallback(\n\t\t({ amount }: any): void => {\n\t\t\tconst price = parseFloat(amount);\n\t\t\tif (price !== ticket.price) {\n\t\t\t\trecalculateBasePrice(price);\n\t\t\t}\n\t\t},\n\t\t[recalculateBasePrice, ticket.price]\n\t);\n\n\tconst wrapperProps = useMemoStringify({ className });\n\n\treturn (\n\t\t<CurrencyInput\n\t\t\tid={ticket.id}\n\t\t\tamount={ticket.price}\n\t\t\tplaceholder={__('set price...')}\n\t\t\twrapperProps={wrapperProps}\n\t\t\tonChange={onChangePrice}\n\t\t\ttag={'h3'}\n\t\t\ttooltip={__('edit ticket total...')}\n\t\t/>\n\t);\n};\n\nexport default React.memo(EditablePrice, getPropsAreEqual(['entity', 'price']));\n","import React from 'react';\n\nimport { Ticket } from '@eventespresso/edtr-services';\nimport { useEntityActionsMenuItems } from '@edtrHooks/index';\n\nconst useTicketsActionMenuItems = (ticket: Ticket): Array<React.ReactNode> => {\n\treturn useEntityActionsMenuItems('ticket', ticket);\n};\n\nexport default useTicketsActionMenuItems;\n","import React from 'react';\n\nimport type { ActionsMenuComponentProps } from '@eventespresso/registry';\nimport { EntityActionsMenu } from '@eventespresso/components';\nimport useTicketsActionMenuItems from '../../hooks/useTicketsActionMenuItems';\nimport { Ticket } from '@eventespresso/edtr-services';\nimport { getPropsAreEqual } from '@eventespresso/services';\n\nconst TicketActionsMenu: React.FC<ActionsMenuComponentProps<Ticket>> = ({ entity, ...props }) => {\n\tconst menuItems = useTicketsActionMenuItems(entity);\n\n\treturn <EntityActionsMenu {...props} menuItems={menuItems} />;\n};\n\nexport default React.memo(TicketActionsMenu, getPropsAreEqual(['entity', 'cacheId']));\n","import React from 'react';\n\nimport { ActionCheckbox, ActionCheckboxProps } from '@eventespresso/components';\n\nimport { useEdtrState } from '@eventespresso/edtr-services';\n\nconst Checkbox: React.FC<ActionCheckboxProps> = (props) => {\n\tconst { visibleTicketIds } = useEdtrState();\n\n\treturn <ActionCheckbox {...props} visibleEntityIds={visibleTicketIds} />;\n};\n\nexport default Checkbox;\n","import React, { useCallback } from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport type { Cell, HeaderRowGeneratorFn } from '@eventespresso/components';\nimport { filterCellByStartOrEndDate } from '@eventespresso/edtr-services';\nimport { TicketsFilterStateManager } from '@edtrServices/filterState';\nimport Checkbox from './Checkbox';\n\ntype TicketsTableHeaderRowGen = HeaderRowGeneratorFn<TicketsFilterStateManager>;\n\nconst useHeaderRowGenerator = (): TicketsTableHeaderRowGen => {\n\treturn useCallback<TicketsTableHeaderRowGen>((filterState) => {\n\t\tconst { displayStartOrEndDate } = filterState;\n\n\t\tconst cellsData: Array<Cell> = [\n\t\t\t{\n\t\t\t\tkey: 'stripe',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-ticket-list-col-hdr ee-entity-list-status-stripe ee-rspnsv-table-column-nano',\n\t\t\t\tvalue: '',\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'checkbox',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-date-list-col-checkbox ee-rspnsv-table-column-micro',\n\t\t\t\tvalue: <Checkbox />,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'id',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-ticket-list-col-hdr ee-ticket-list-col-id ee-number-column ee-rspnsv-table-column-nano',\n\t\t\t\tvalue: __('ID'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'name',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-ticket-list-col-hdr ee-ticket-list-col-name ee-rspnsv-table-column-bigger',\n\t\t\t\tvalue: __('Name'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'start',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-ticket-list-col-hdr ee-ticket-list-col-name-start ee-rspnsv-table-column-default',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('Goes on Sale')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('On Sale')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'end',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-ticket-list-col-hdr ee-ticket-list-col-end ee-rspnsv-table-column-default',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('Sale Ends')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('Ends')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'price',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-ticket-list-col-hdr ee-ticket-list-col-price ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\tvalue: __('Price'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'quantity',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-ticket-list-col-hdr ee-ticket-list-col-quantity ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\tvalue: __('Quantity'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'sold',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-ticket-list-col-hdr ee-ticket-list-col-sold ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\tvalue: __('Sold'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'registrations',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-ticket-list-col-hdr ee-ticket-list-col-registrations ee-rspnsv-table-column-smaller ee-centered-column',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('Registrations')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('Regs')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'actions',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-ticket-list-col-hdr ee-actions-column ee-rspnsv-table-column-big ee-centered-column',\n\t\t\t\tvalue: <span className={'ee-rspnsv-table-long-label'}>{__('Actions')}</span>,\n\t\t\t},\n\t\t];\n\n\t\tconst cells = cellsData.filter(filterCellByStartOrEndDate(displayStartOrEndDate));\n\n\t\treturn {\n\t\t\tcells,\n\t\t\tclassName: 'ee-editor-ticket-list-items-header-row',\n\t\t\tkey: 'ticket-header-row',\n\t\t\tprimary: true,\n\t\t\ttype: 'row',\n\t\t};\n\t}, []);\n};\n\nexport default useHeaderRowGenerator;\n","import React, { useCallback } from 'react';\nimport { format } from 'date-fns';\nimport { filter, pipe } from 'ramda';\n\nimport { Cell, addZebraStripesOnMobile } from '@eventespresso/components';\nimport { filterCellByStartOrEndDate } from '@eventespresso/edtr-services';\nimport { ENTITY_LIST_DATE_TIME_FORMAT } from '@eventespresso/constants';\nimport { getTicketBackgroundColorClassName, ticketStatus } from '@eventespresso/helpers';\nimport { shortenGuid } from '@eventespresso/services';\nimport { Ticket } from '@eventespresso/edtr-services';\nimport TicketActionsMenu from '@edtrUI/tickets/ticketsList/actionsMenu/TicketActionsMenu';\nimport { useMoneyDisplay } from '@eventespresso/services';\nimport TicketQuantity from '../cardView/TicketQuantity';\nimport { BodyRowGeneratorFn } from '@eventespresso/components';\nimport { TicketsFilterStateManager } from '@edtrServices/filterState';\nimport { EditableName } from '../editable';\nimport TicketRegistrationsLink from '../../TicketRegistrationsLink';\nimport Checkbox from './Checkbox';\n\nimport '../../../../../../../packages/styles/src/root/entity-status.css';\n\ntype TicketsTableBodyRowGen = BodyRowGeneratorFn<Ticket, TicketsFilterStateManager>;\n\nconst useBodyRowGenerator = (): TicketsTableBodyRowGen => {\n\tconst { formatAmount } = useMoneyDisplay();\n\n\treturn useCallback<TicketsTableBodyRowGen>(\n\t\t({ entity: ticket, filterState }) => {\n\t\t\tconst { displayStartOrEndDate, sortingEnabled } = filterState;\n\n\t\t\tconst bgClassName = getTicketBackgroundColorClassName(ticket);\n\t\t\tconst id = ticket.dbId || shortenGuid(ticket.id);\n\t\t\tconst statusClassName = ticketStatus(ticket);\n\n\t\t\tconst name = {\n\t\t\t\tkey: 'name',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-ticket-list-cell ee-ticket-list-col-name ee-col-name ee-rspnsv-table-column-bigger ee-rspnsv-table-hide-on-mobile',\n\t\t\t\tvalue: sortingEnabled ? (\n\t\t\t\t\tticket.name\n\t\t\t\t) : (\n\t\t\t\t\t<EditableName\n\t\t\t\t\t\tclassName={'ee-entity-list-text ee-focus-priority-5'}\n\t\t\t\t\t\tentity={ticket}\n\t\t\t\t\t\tview={'table'}\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t};\n\n\t\t\tconst quantity = {\n\t\t\t\tkey: 'quantity',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-ticket-list-cell ee-ticket-list-col-quantity ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\tvalue: sortingEnabled ? ticket.quantity : <TicketQuantity entity={ticket} />,\n\t\t\t};\n\n\t\t\tconst cellsData: Array<Cell> = [\n\t\t\t\t{\n\t\t\t\t\tkey: 'stripe',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: `ee-ticket-list-cell ee-entity-list-status-stripe ${bgClassName} ee-rspnsv-table-column-nano`,\n\t\t\t\t\tvalue: <div className={'ee-rspnsv-table-show-on-mobile'}>{ticket.name}</div>,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'checkbox',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: 'ee-date-list-cell ee-date-list-col-checkbox ee-rspnsv-table-column-micro',\n\t\t\t\t\tvalue: <Checkbox id={ticket.id} />,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'id',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: 'ee-ticket-list-cell ee-ticket-list-col-id ee-rspnsv-table-column-nano ee-number-column',\n\t\t\t\t\tvalue: id,\n\t\t\t\t},\n\t\t\t\tname,\n\t\t\t\t{\n\t\t\t\t\tkey: 'start',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: 'ee-ticket-list-cell ee-ticket-list-col-start ee-rspnsv-table-column-default',\n\t\t\t\t\tvalue: format(new Date(ticket.startDate), ENTITY_LIST_DATE_TIME_FORMAT),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'end',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: 'ee-ticket-list-cell ee-ticket-list-col-end ee-rspnsv-table-column-default',\n\t\t\t\t\tvalue: format(new Date(ticket.endDate), ENTITY_LIST_DATE_TIME_FORMAT),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'price',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName:\n\t\t\t\t\t\t'ee-ticket-list-col-hdr ee-ticket-list-col-price ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\t\tvalue: formatAmount(ticket.price),\n\t\t\t\t},\n\t\t\t\tquantity,\n\t\t\t\t{\n\t\t\t\t\tkey: 'sold',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName:\n\t\t\t\t\t\t'ee-ticket-list-cell ee-ticket-list-col-sold ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\t\tvalue: ticket.sold,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'registrations',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName:\n\t\t\t\t\t\t'ee-ticket-list-cell ee-ticket-list-col-registrations ee-rspnsv-table-column-smaller ee-centered-column',\n\t\t\t\t\tvalue: sortingEnabled ? '-' : <TicketRegistrationsLink ticket={ticket} />,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'actions',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: 'ee-ticket-list-cell ee-actions-column ee-rspnsv-table-column-big',\n\t\t\t\t\tvalue: sortingEnabled ? '-' : <TicketActionsMenu entity={ticket} />,\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tconst exclude = ['row', 'stripe', 'name', 'actions'];\n\n\t\t\tconst cells = pipe(\n\t\t\t\tfilter(filterCellByStartOrEndDate(displayStartOrEndDate)),\n\t\t\t\taddZebraStripesOnMobile(exclude)\n\t\t\t)(cellsData);\n\n\t\t\treturn {\n\t\t\t\tcells,\n\t\t\t\tclassName: `ee-editor-date-list-view-row ${statusClassName}`,\n\t\t\t\tid: `ee-editor-date-list-view-row-${ticket.id}`,\n\t\t\t\tkey: `row-${ticket.id}`,\n\t\t\t\ttype: 'row',\n\t\t\t};\n\t\t},\n\t\t[formatAmount]\n\t); // no deps\n};\n\nexport default useBodyRowGenerator;\n","import { __ } from '@wordpress/i18n';\nimport * as yup from 'yup';\n\nimport { yupToFinalFormErrors } from '@eventespresso/form';\nimport { BulkEditFormShape } from './types';\n\nexport const validate = async (values: BulkEditFormShape): Promise<any> => {\n\treturn await yupToFinalFormErrors(validationSchema, values);\n};\n\nconst validationSchema = yup.object({\n\tname: yup.string().min(3, () => __('Name must be at least three characters')),\n});\n","import { useMemo, useCallback } from 'react';\nimport { __ } from '@wordpress/i18n';\nimport { pick } from 'ramda';\n\nimport { CalendarOutlined, ControlOutlined, ProfileOutlined } from '@eventespresso/icons';\nimport { intervalsToOptions, Intervals, DATE_INTERVALS } from '@eventespresso/services';\nimport type { EspressoFormProps } from '@eventespresso/form';\n\nimport { validate } from './formValidation';\nimport type { BulkEditFormShape } from './types';\nimport { useMemoStringify } from '@eventespresso/hooks';\n\ntype DateFormConfig = EspressoFormProps<BulkEditFormShape>;\n\nconst unitOptions = intervalsToOptions(\n\tpick<Intervals, keyof Intervals>(['months', 'weeks', 'days', 'hours', 'minutes'], DATE_INTERVALS),\n\ttrue\n);\n\nconst useBulkEditFormConfig = (config?: EspressoFormProps<BulkEditFormShape>): DateFormConfig => {\n\tconst { onSubmit } = config;\n\n\tconst onSubmitFrom: DateFormConfig['onSubmit'] = useCallback(\n\t\t(values, form, ...restParams) => {\n\t\t\treturn onSubmit(values, form, ...restParams);\n\t\t},\n\t\t[onSubmit]\n\t);\n\n\tconst adjacentFormItemProps = useMemoStringify({\n\t\tclassName: 'ee-form-item-pair',\n\t});\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\t...config,\n\t\t\tonSubmit: onSubmitFrom,\n\t\t\tvalidate,\n\t\t\tlayout: 'horizontal',\n\t\t\tdebugFields: ['values', 'errors'],\n\t\t\tsections: [\n\t\t\t\t{\n\t\t\t\t\tname: 'basics',\n\t\t\t\t\ticon: ProfileOutlined,\n\t\t\t\t\ttitle: __('Basics'),\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\tlabel: __('Name'),\n\t\t\t\t\t\t\tfieldType: 'text',\n\t\t\t\t\t\t\tmin: 3,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'description',\n\t\t\t\t\t\t\tlabel: __('Description'),\n\t\t\t\t\t\t\tfieldType: 'textarea',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'dates',\n\t\t\t\t\ticon: CalendarOutlined,\n\t\t\t\t\ttitle: __('Dates'),\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'shiftDates',\n\t\t\t\t\t\t\tlabel: __('Shift dates'),\n\t\t\t\t\t\t\tfieldType: 'group',\n\t\t\t\t\t\t\tformControlProps: {\n\t\t\t\t\t\t\t\tclassName: 'shift-dates',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsubFields: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\t\t\t\tfieldType: 'number',\n\t\t\t\t\t\t\t\t\tmin: 1,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'unit',\n\t\t\t\t\t\t\t\t\tfieldType: 'select',\n\t\t\t\t\t\t\t\t\toptions: unitOptions,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'type',\n\t\t\t\t\t\t\t\t\tfieldType: 'select',\n\t\t\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: '',\n\t\t\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: __('earlier'),\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'earlier',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: __('later'),\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'later',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'details',\n\t\t\t\t\ticon: ControlOutlined,\n\t\t\t\t\ttitle: __('Details'),\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'quantity',\n\t\t\t\t\t\t\tlabel: __('Quantity For Sale'),\n\t\t\t\t\t\t\tfieldType: 'number',\n\t\t\t\t\t\t\tformControlProps: adjacentFormItemProps,\n\t\t\t\t\t\t\tparseAsInfinity: true,\n\t\t\t\t\t\t\tmin: -1,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'uses',\n\t\t\t\t\t\t\tlabel: __('Number of Uses'),\n\t\t\t\t\t\t\tfieldType: 'number',\n\t\t\t\t\t\t\tparseAsInfinity: true,\n\t\t\t\t\t\t\tformControlProps: adjacentFormItemProps,\n\t\t\t\t\t\t\tmin: 0,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'min',\n\t\t\t\t\t\t\tlabel: __('Minimum Quantity'),\n\t\t\t\t\t\t\tfieldType: 'number',\n\t\t\t\t\t\t\tformControlProps: adjacentFormItemProps,\n\t\t\t\t\t\t\tmin: 0,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'max',\n\t\t\t\t\t\t\tlabel: __('Maximum Quantity'),\n\t\t\t\t\t\t\tfieldType: 'number',\n\t\t\t\t\t\t\tparseAsInfinity: true,\n\t\t\t\t\t\t\tformControlProps: adjacentFormItemProps,\n\t\t\t\t\t\t\tmin: -1,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'isRequired',\n\t\t\t\t\t\t\tlabel: __('Required Ticket'),\n\t\t\t\t\t\t\tfieldType: 'switch',\n\t\t\t\t\t\t\tformControlProps: adjacentFormItemProps,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t],\n\t\t}),\n\t\t[adjacentFormItemProps, config, onSubmitFrom]\n\t);\n};\n\nexport default useBulkEditFormConfig;\n","import { useCallback } from 'react';\n\nimport { useBulkEdit } from '@eventespresso/services';\nimport { useTickets, useBulkEditTickets, formToBulkUpdateInput } from '@eventespresso/edtr-services';\n\nimport type { BulkEditFormShape } from './types';\n\ntype Callback = (values: BulkEditFormShape) => void;\n\nconst useSubmitForm = (onClose: VoidFunction): Callback => {\n\tconst { getSelected, unSelectAll } = useBulkEdit();\n\tconst allTickets = useTickets();\n\tconst { updateEntities } = useBulkEditTickets();\n\treturn useCallback<Callback>(\n\t\t(formData) => {\n\t\t\t// pull the shutter down\n\t\t\tonClose();\n\t\t\t// back to basics\n\t\t\tunSelectAll();\n\t\t\t// prepare mutation input from data\n\t\t\tconst input = formToBulkUpdateInput(formData, allTickets, getSelected());\n\t\t\t// do the thing\n\t\t\tupdateEntities(input);\n\t\t},\n\t\t[allTickets, getSelected, onClose, unSelectAll, updateEntities]\n\t);\n};\n\nexport default useSubmitForm;\n","import React from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport { BulkEditDetails } from '@eventespresso/components';\nimport useBulkEditFormConfig from './useBulkEditFormConfig';\nimport useSubmitForm from './useSubmitForm';\n\ntype EditDetailsProps = {\n\tisOpen: boolean;\n\tonClose: VoidFunction;\n};\n\nconst EditDetails: React.FC<EditDetailsProps> = ({ onClose, isOpen }) => {\n\tconst onSubmit = useSubmitForm(onClose);\n\tconst formConfig = useBulkEditFormConfig({ onSubmit });\n\n\treturn (\n\t\t<BulkEditDetails\n\t\t\tformConfig={formConfig}\n\t\t\tisOpen={isOpen}\n\t\t\tonClose={onClose}\n\t\t\ttitle={__('Bulk edit ticket details')}\n\t\t\twarning={__('any changes will be applied to ALL of the selected tickets.')}\n\t\t/>\n\t);\n};\n\nexport default EditDetails;\n","import { useCallback } from 'react';\n\nimport { useBulkEdit } from '@eventespresso/services';\nimport { useBulkDeleteTickets } from '@eventespresso/edtr-services';\n\nimport type { OnDeleteProps } from './types';\n\ntype OnDelete = (props: OnDeleteProps) => VoidFunction;\n\nconst useOnDelete: OnDelete = ({ areTrashedTickets, onClose }) => {\n\tconst { getSelected, unSelectAll } = useBulkEdit();\n\tconst bulkDelete = useBulkDeleteTickets();\n\treturn useCallback<VoidFunction>(() => {\n\t\t// pull the shutter down\n\t\tonClose();\n\t\t// back to basics\n\t\tunSelectAll();\n\n\t\t// goodbye folks :wave:\n\t\tbulkDelete(getSelected(), areTrashedTickets);\n\t}, [areTrashedTickets, bulkDelete, getSelected, onClose, unSelectAll]);\n};\n\nexport default useOnDelete;\n","import React, { useEffect } from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport { useConfirmationDialog } from '@eventespresso/components';\nimport useOnDelete from './useOnDelete';\nimport { OnDeleteProps } from './types';\n\nconst Delete: React.FC<OnDeleteProps> = ({ areTrashedTickets, onClose }) => {\n\tconst onDelete = useOnDelete({ areTrashedTickets, onClose });\n\n\tconst { confirmationDialog, onOpen } = useConfirmationDialog({\n\t\tmessage: areTrashedTickets\n\t\t\t? __('Are you sure you want to permanently delete these tickets? This action can NOT be undone!')\n\t\t\t: __('Are you sure you want to trash these tickets?'),\n\t\ttitle: areTrashedTickets ? __('Delete tickets permanently') : __('Trash tickets'),\n\t\tonConfirm: onDelete,\n\t\tonCancel: onClose,\n\t});\n\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\tuseEffect(() => onOpen(), []);\n\n\treturn <>{confirmationDialog}</>;\n};\n\nexport default Delete;\n","import React, { useCallback } from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport { Button } from '@eventespresso/components';\nimport { Box, Divider } from '@eventespresso/adapters';\nimport { EditMode } from '../types';\n\nexport interface EditModeButtonsProps {\n\tsetEditMode: (editMode: EditMode) => void;\n}\n\nexport const EditModeButtons: React.FC<EditModeButtonsProps> = ({ setEditMode }) => {\n\tconst onClickTogether = useCallback(() => setEditMode('together'), [setEditMode]);\n\tconst onClickSeparate = useCallback(() => setEditMode('separate'), [setEditMode]);\n\treturn (\n\t\t<Box display='flex' alignItems='center' justifyContent='center' height='100%'>\n\t\t\t<Box>\n\t\t\t\t<Button onClick={onClickTogether} buttonText={__('Edit all prices together')} />\n\t\t\t\t<p>{__('Edit all the selected ticket prices dynamically')}</p>\n\t\t\t</Box>\n\t\t\t<Divider orientation='vertical' height='50%' />\n\t\t\t<Box>\n\t\t\t\t<Button onClick={onClickSeparate} buttonText={__('Edit prices individually')} />\n\t\t\t\t<p>{__('Edit prices for each ticket individually')}</p>\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n","import React from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport { Button, ButtonRow, ButtonType } from '@eventespresso/components';\n\nexport interface FooterButtonsProps {\n\tonSubmit: VoidFunction;\n\tonReset?: VoidFunction;\n\tonCancel?: VoidFunction;\n}\n\nexport const FooterButtons: React.FC<FooterButtonsProps> = ({ onSubmit, onReset, onCancel }) => {\n\treturn (\n\t\t<ButtonRow align='right' topBordered>\n\t\t\t{onReset && <Button buttonText={__('Reset')} onClick={onReset} type='reset' />}\n\t\t\t{onCancel && <Button buttonText={__('Cancel')} onClick={onCancel} />}\n\t\t\t<Button buttonText={__('Submit')} buttonType={ButtonType.PRIMARY} onClick={onSubmit} type='submit' />\n\t\t</ButtonRow>\n\t);\n};\n","import { useCallback } from 'react';\n\nimport { useTicketMutator, useTicketPrices, useBulkDeletePrices } from '@eventespresso/edtr-services';\nimport { parsedAmount, toBoolean, useBulkEdit } from '@eventespresso/services';\nimport { useDataState, useMutatePrices } from '@eventespresso/tpc';\nimport { isNotDefault, getGuids } from '@eventespresso/predicates';\n\nconst useOnSubmitPrices = (onClose: VoidFunction): (() => Promise<void>) => {\n\tconst { prices, ticket } = useDataState();\n\tconst { getSelected } = useBulkEdit();\n\n\tconst { updateEntity: updateTicket } = useTicketMutator();\n\tconst mutatePrices = useMutatePrices();\n\n\t// prices related to all the selected tickets\n\tconst relatedPrices = useTicketPrices(getSelected());\n\n\tconst deletePrices = useBulkDeletePrices();\n\n\t// prices may contain default taxes,\n\t// we need to make sure they are not deleted.\n\tconst nonDefaultPrices = relatedPrices.filter(isNotDefault);\n\n\t// Async to make sure that prices are handled before updating the ticket.\n\treturn useCallback(async () => {\n\t\t// lower down the curtains\n\t\tonClose();\n\t\t// delete all non-default prices\n\t\tawait deletePrices(getGuids(nonDefaultPrices));\n\n\t\t// tickets/prices can be mutated in parallel\n\t\tawait Promise.all(\n\t\t\t// loop through all the selected tickets and update thei price information\n\t\t\tgetSelected().map(async (ticketId) => {\n\t\t\t\t// create/update prices and collect their ids\n\t\t\t\tconst relatedPriceIds = await mutatePrices(prices);\n\n\t\t\t\t// Finally update the ticket and its price relation\n\t\t\t\tawait updateTicket({\n\t\t\t\t\tid: ticketId,\n\t\t\t\t\tprice: parsedAmount(ticket.price || 0),\n\t\t\t\t\treverseCalculate: toBoolean(ticket.reverseCalculate),\n\t\t\t\t\tisTaxable: toBoolean(ticket.isTaxable),\n\t\t\t\t\tprices: relatedPriceIds,\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\t}, [deletePrices, getSelected, mutatePrices, nonDefaultPrices, onClose, prices, ticket, updateTicket]);\n};\n\nexport default useOnSubmitPrices;\n","import React, { useEffect } from 'react';\n\nimport { TicketPriceCalculator, useAddDefaultPrices, withContext as withTPCContext } from '@eventespresso/tpc';\n\nimport { FooterButtons } from '../buttons';\nimport { EditPricesBaseProps } from '../types';\nimport useOnSubmitPrices from './useOnSubmitPrices';\n\nconst EditTogether: React.FC<EditPricesBaseProps> = ({ onClose }) => {\n\tconst addDefaultPrices = useAddDefaultPrices();\n\t// add default prices on mount\n\tuseEffect(() => {\n\t\taddDefaultPrices();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst onSubmit = useOnSubmitPrices(onClose);\n\n\treturn (\n\t\t<>\n\t\t\t<TicketPriceCalculator />\n\t\t\t<FooterButtons onSubmit={onSubmit} onReset={addDefaultPrices} />\n\t\t</>\n\t);\n};\n\nexport default withTPCContext(EditTogether, { ticketId: '' });\n","import React, { useEffect } from 'react';\nimport { __, sprintf } from '@wordpress/i18n';\n\nimport { TicketPriceCalculator, useDataState } from '@eventespresso/tpc';\nimport { ManageTPCStates } from './useManageTPCStates';\n\nexport interface TPCInstanceProps {\n\tsetTPCState: ManageTPCStates['setTPCState'];\n}\n\nexport const TPCInstance: React.FC<TPCInstanceProps> = ({ setTPCState }) => {\n\tconst { ticket, getData } = useDataState();\n\n\tuseEffect(() => {\n\t\tsetTPCState(getData());\n\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [getData]);\n\n\treturn (\n\t\t<>\n\t\t\t<header>{sprintf(__('Edit prices for Ticket: %s'), ticket.name)}</header>\n\t\t\t<TicketPriceCalculator />\n\t\t</>\n\t);\n};\n","import { useCallback, useMemo, useRef } from 'react';\n\nimport { DataState } from '@eventespresso/tpc';\nimport { AnyObject } from '@eventespresso/services';\n\nexport interface ManageTPCStates {\n\tsetTPCState: (dataState: DataState) => void;\n\tgetDataStates: () => AnyObject<DataState>;\n}\n\nexport const useManageTPCStates = (): ManageTPCStates => {\n\t/**\n\t * This contains the data for all TPC instances.\n\t *\n\t * Since this is not used anywhere in the view, rather only used on final submission\n\t * useRef is made for this, to avoid any unnecessary re-renders\n\t */\n\tconst dataStates = useRef<AnyObject<DataState>>({});\n\n\tconst setTPCState = useCallback<ManageTPCStates['setTPCState']>(\n\t\t(dataState) => {\n\t\t\tdataStates.current = { ...dataStates.current, [dataState?.ticket?.id]: dataState };\n\t\t},\n\t\t[dataStates]\n\t);\n\n\tconst getDataStates = useCallback<ManageTPCStates['getDataStates']>(() => dataStates.current, [dataStates]);\n\n\treturn useMemo(() => ({ setTPCState, getDataStates }), [setTPCState, getDataStates]);\n};\n","import { useCallback } from 'react';\n\nimport { useOnSubmitPrices } from '@eventespresso/tpc';\nimport { ManageTPCStates } from './useManageTPCStates';\n\nconst useOnSubmit = (onClose: VoidFunction, getDataStates: ManageTPCStates['getDataStates']): (() => Promise<void>) => {\n\tconst submitPrices = useOnSubmitPrices();\n\n\treturn useCallback(async () => {\n\t\t// lower down the curtains\n\t\tonClose();\n\n\t\t// tickets/prices can be mutated in parallel\n\t\tawait Promise.all(\n\t\t\t// loop through all the selected tickets and update their price information\n\t\t\tObject.values(getDataStates()).map(async (dataState) => {\n\t\t\t\t// Finally update the ticket and its price relation\n\t\t\t\tawait submitPrices(dataState);\n\t\t\t})\n\t\t);\n\t}, [getDataStates, onClose, submitPrices]);\n};\n\nexport default useOnSubmit;\n","import React from 'react';\n\nimport { withContext as withTPCContext } from '@eventespresso/tpc';\nimport { useBulkEdit } from '@eventespresso/services';\n\nimport { EditPricesBaseProps } from '../types';\nimport { TPCInstance } from './TPCInstance';\nimport { FooterButtons } from '../buttons';\nimport { useManageTPCStates } from './useManageTPCStates';\nimport useOnSubmit from './useOnSubmit';\n\nconst EditSeparately: React.FC<EditPricesBaseProps> = ({ onClose }) => {\n\tconst { getSelected } = useBulkEdit();\n\n\tconst { getDataStates, setTPCState } = useManageTPCStates();\n\n\tconst onSubmit = useOnSubmit(onClose, getDataStates);\n\n\tconst ticketIds = getSelected();\n\n\treturn (\n\t\t<>\n\t\t\t{ticketIds.map<React.ReactNode>((ticketId) => {\n\t\t\t\tconst Instance = withTPCContext(TPCInstance, { ticketId });\n\t\t\t\treturn <Instance key={ticketId} setTPCState={setTPCState} />;\n\t\t\t})}\n\t\t\t<FooterButtons onSubmit={onSubmit} onCancel={onClose} />\n\t\t</>\n\t);\n};\n\nexport default EditSeparately;\n","import React, { useState } from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport { EntityEditModal } from '@eventespresso/components';\nimport { EditModeButtons } from './buttons';\nimport { EditMode, EditPricesBaseProps } from './types';\nimport { EditTogether } from './editTogether';\nimport { EditSeparately } from './editSeparately';\n\nconst EditPrices: React.FC<EditPricesBaseProps> = ({ onClose, isOpen }) => {\n\tconst [editMode, setEditMode] = useState<EditMode>();\n\n\treturn (\n\t\t<EntityEditModal\n\t\t\tisOpen={isOpen}\n\t\t\tonClose={onClose}\n\t\t\tcloseOnOverlayClick={true}\n\t\t\ttitle={__('Bulk edit ticket prices')}\n\t\t>\n\t\t\t{!editMode && <EditModeButtons setEditMode={setEditMode} />}\n\t\t\t{editMode === 'together' && <EditTogether onClose={onClose} />}\n\t\t\t{editMode === 'separate' && <EditSeparately onClose={onClose} />}\n\t\t</EntityEditModal>\n\t);\n};\n\nexport default EditPrices;\n","import React, { useState, useCallback } from 'react';\nimport { __ } from '@wordpress/i18n';\nimport { useDisclosure } from '@chakra-ui/hooks';\n\nimport { BulkActions, BulkActionsProps } from '@eventespresso/components';\nimport { useMemoStringify } from '@eventespresso/hooks';\n\nimport { useTicketsListFilterState, TicketsStatus } from '@edtrServices/filterState';\nimport { EditDetails } from '../details';\nimport { Delete } from '../delete';\nimport { EditPrices } from '../prices';\n\ntype Action = 'edit-details' | 'delete' | 'edit-prices' | '';\n\nconst Actions: React.FC = () => {\n\tconst [action, setAction] = useState<Action>('');\n\n\tconst { isOpen, onOpen, onClose } = useDisclosure();\n\tconst { status } = useTicketsListFilterState();\n\n\tconst areTrashedTickets = status === TicketsStatus.trashedOnly;\n\n\tconst options = useMemoStringify([\n\t\t{\n\t\t\tvalue: '',\n\t\t\tlabel: __('bulk actions'),\n\t\t},\n\t\t{\n\t\t\tvalue: 'edit-details',\n\t\t\tlabel: __('edit ticket details'),\n\t\t},\n\t\t{\n\t\t\tvalue: 'delete',\n\t\t\tlabel: areTrashedTickets ? __('delete tickets') : __('trash tickets'),\n\t\t},\n\t\t{\n\t\t\tvalue: 'edit-prices',\n\t\t\tlabel: __('edit ticket prices'),\n\t\t},\n\t]);\n\n\tconst onApply = useCallback<BulkActionsProps<Action>['onApply']>(\n\t\t(action) => {\n\t\t\tsetAction(action);\n\t\t\tonOpen();\n\t\t},\n\t\t[onOpen]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<BulkActions options={options} onApply={onApply} defaultAction='' />\n\t\t\t{isOpen && (\n\t\t\t\t<>\n\t\t\t\t\t{action === 'edit-details' && <EditDetails isOpen={true} onClose={onClose} />}\n\t\t\t\t\t{action === 'delete' && <Delete areTrashedTickets={areTrashedTickets} onClose={onClose} />}\n\t\t\t\t\t{action === 'edit-prices' && <EditPrices isOpen={true} onClose={onClose} />}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Actions;\n","import React from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport { EntityTable } from '@eventespresso/components';\nimport useHeaderRowGenerator from './useHeaderRowGenerator';\nimport useBodyRowGenerator from './useBodyRowGenerator';\nimport { useTicketsListContext } from '@edtrServices/context/EntityListContext';\nimport { useReorderTickets } from '@eventespresso/edtr-services';\nimport { withBulkEdit } from '@eventespresso/services';\nimport { Actions } from '../bulkEdit';\n\n/**\n * Displays tickets in a standard list table like view\n */\nconst TableView: React.FC = () => {\n\tconst { filterState, filteredEntities } = useTicketsListContext();\n\n\tconst { sortResponder: sortTickets } = useReorderTickets(filteredEntities);\n\n\tconst bodyRowGenerator = useBodyRowGenerator();\n\tconst headerRowGenerator = useHeaderRowGenerator();\n\n\treturn (\n\t\t<>\n\t\t\t<Actions />\n\t\t\t<EntityTable\n\t\t\t\tentities={filteredEntities}\n\t\t\t\tfilterState={filterState}\n\t\t\t\tbodyRowGenerator={bodyRowGenerator}\n\t\t\t\theaderRowGenerator={headerRowGenerator}\n\t\t\t\tclassName={'ee-tickets-list-list-view ee-fade-in'}\n\t\t\t\ttableId='ticket-entities-table-view'\n\t\t\t\ttableCaption={__('Tickets')}\n\t\t\t\tonSort={sortTickets}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default withBulkEdit(TableView);\n"],"sourceRoot":""}